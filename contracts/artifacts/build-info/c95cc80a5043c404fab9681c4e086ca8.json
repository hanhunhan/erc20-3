{
	"id": "c95cc80a5043c404fab9681c4e086ca8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MVEX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.18;\r\n//import \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\r\n//import \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n//import \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\n//import \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\n\r\n \r\nimport {IERC20Upgradeable} from \"../lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\"; \r\nimport {UUPSUpgradeable} from \"../lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {OwnableUpgradeable} from \"../lib/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n \r\n\r\ncontract MVEXContract is  OwnableUpgradeable, UUPSUpgradeable {\r\n    address public usdt;\r\n    address public platformAddress;\r\n    address public monthDividendAddress;\r\n    address public acbConfig;\r\n    address public teamRewardAddress;\r\n    address public remainingAddress;\r\n    uint256 public platformRate;\r\n    uint256 public swapRate;\r\n    \r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n       \r\n    }\r\n\r\n    function initialize(address _acbConfig) initializer public {\r\n        __Ownable_init();\r\n        __UUPSUpgradeable_init();\r\n         acbConfig =_acbConfig;\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation)\r\n        internal\r\n        onlyOwner\r\n        override\r\n    {}\r\n\r\n\r\n    \r\n   \r\n    function changeConfig(address _acbConfig)external onlyOwner{\r\n        acbConfig = _acbConfig;\r\n    }\r\n    \r\n\r\n   function usdtswap(uint256 amount)external {\r\n    \r\n        bool res = IERC20Upgradeable(ACCONFIG(acbConfig).usdt()).transferFrom(msg.sender, ACCONFIG(acbConfig).teamRewardAddress(), amount * ACCONFIG(acbConfig).swapRate() / 1000);\r\n        if(res){\r\n            IERC20Upgradeable(ACCONFIG(acbConfig).mv()).transferFrom( ACCONFIG(acbConfig).remainingAddress(),msg.sender , amount * ACCONFIG(acbConfig).swapRate() / 1000);\r\n        }\r\n        \r\n\t    \t\t\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\ninterface ACCONFIG {\r\n    function usdt()external view returns (address);\r\n    function platformAddress()external view returns (address);\r\n    function mv()external view returns (address);\r\n    function swapRate()external view returns (uint256 );\r\n    function teamRewardAddress()external view returns (address );\r\n    function remainingAddress()external view returns (address );\r\n    function mvCollectionAddress()external view returns (address );\r\n    function techAddress()external view returns (address );\r\n    function marketAddress()external view returns (address );\r\n     \r\n    \r\n}"
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\n        require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.9._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MVEX.sol": {
				"ACCONFIG": {
					"abi": [
						{
							"inputs": [],
							"name": "marketAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mv",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mvCollectionAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamRewardAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "techAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"marketAddress()": "95623641",
							"mv()": "8f05cdf5",
							"mvCollectionAddress()": "e9d610e5",
							"platformAddress()": "dbe55e56",
							"remainingAddress()": "f97fe091",
							"swapRate()": "698518e5",
							"teamRewardAddress()": "4b21ddec",
							"techAddress()": "1e56cfab",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"marketAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mv\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mvCollectionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"techAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MVEX.sol\":\"ACCONFIG\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/MVEX.sol\":{\"keccak256\":\"0xa0f5543c1797dc3875b19f144c87a7d3068a9d0a2b66e3c4d15c0bc5caa6c7cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90305e396f0c3b0dd76dd9c67acd71daecc5f0510ccb5c05d3b2a281bb281a0a\",\"dweb:/ipfs/QmPUxFsD7d7zg7W2HfHWFabgoZ3coDGLRVaBwq6aCz8z2G\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MVEXContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acbConfig",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_acbConfig",
									"type": "address"
								}
							],
							"name": "changeConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_acbConfig",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthDividendAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamRewardAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "usdtswap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MVEX.sol\":732:2102  contract MVEXContract is  OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1332:1336  this */\n  address\n    /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1289:1337  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"contracts/MVEX.sol\":1138:1202  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/MVEX.sol\":1163:1185  _disableInitializers() */\n  tag_4\n    /* \"contracts/MVEX.sol\":1163:1183  _disableInitializers */\n  tag_5\n    /* \"contracts/MVEX.sol\":1163:1185  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"contracts/MVEX.sol\":732:2102  contract MVEXContract is  OwnableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_14)\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5928:6207  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5996:6009  _initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5995:6009  !_initializing */\n  iszero\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5987:6053  require(!_initializing, \"Initializable: contract is initializing\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5987:6053  require(!_initializing, \"Initializable: contract is initializing\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x27\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:328   */\n  0x496e697469616c697a61626c653a20636f6e747261637420697320696e697469\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0xc8, 0x616c697a696e67)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:375   */\n  mstore\n    /* \"#utility.yul\":392:411   */\n  0x84\n  add\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5987:6053  require(!_initializing, \"Initializable: contract is initializing\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6067:6079  _initialized */\n  sload(0x00)\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6082:6097  type(uint8).max */\n  0xff\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6067:6079  _initialized */\n  swap1\n  dup2\n  and\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6067:6097  _initialized < type(uint8).max */\n  lt\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6063:6201  if (_initialized < type(uint8).max) {... */\n  iszero\n  tag_11\n  jumpi\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6113:6125  _initialized */\n  0x00\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6113:6143  _initialized = type(uint8).max */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6128:6143  type(uint8).max */\n  0xff\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6113:6143  _initialized = type(uint8).max */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6162:6190  Initialized(type(uint8).max) */\n  mload(0x40)\n    /* \"#utility.yul\":564:600   */\n  swap1\n  dup2\n  mstore\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6162:6190  Initialized(type(uint8).max) */\n  0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n  swap1\n    /* \"#utility.yul\":552:554   */\n  0x20\n    /* \"#utility.yul\":537:555   */\n  add\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6162:6190  Initialized(type(uint8).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":6063:6201  if (_initialized < type(uint8).max) {... */\ntag_11:\n    /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5928:6207  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":422:606   */\ntag_14:\n    /* \"contracts/MVEX.sol\":732:2102  contract MVEXContract is  OwnableUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/MVEX.sol\":732:2102  contract MVEXContract is  OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x210835ae\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36e0cac6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4b21ddec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x698518e5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb2cf085e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd0675bfd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdba64f8f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdbe55e56\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf97fe091\n      eq\n      tag_18\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MVEX.sol\":1517:1617  function changeConfig(address _acbConfig)external onlyOwner{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/MVEX.sol\":801:820  address public usdt */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      sload(0xc9)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":566:598   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":548:599   */\n      dup2\n      mstore\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"contracts/MVEX.sol\":801:820  address public usdt */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_20\n      tag_31\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"contracts/MVEX.sol\":1014:1041  uint256 public platformRate */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      sload(0xcf)\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":756:781   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":744:746   */\n      0x20\n        /* \"#utility.yul\":729:747   */\n      add\n        /* \"contracts/MVEX.sol\":1014:1041  uint256 public platformRate */\n      tag_27\n        /* \"#utility.yul\":610:787   */\n      jump\n        /* \"contracts/MVEX.sol\":937:969  address public teamRewardAddress */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      sload(0xcd)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n    tag_7:\n      tag_20\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_34\n      tag_48\n      jump\t// in\n        /* \"contracts/MVEX.sol\":1048:1071  uint256 public swapRate */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_34\n      sload(0xd0)\n      dup2\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_20\n      tag_57\n      jump\t// in\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_25\n      tag_60\n      jump\t// in\n        /* \"contracts/MVEX.sol\":864:899  address public monthDividendAddress */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      sload(0xcb)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MVEX.sol\":1210:1372  function initialize(address _acbConfig) initializer public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_20\n      tag_68\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/MVEX.sol\":1630:2097  function usdtswap(uint256 amount)external {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_20\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"contracts/MVEX.sol\":906:930  address public acbConfig */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      sload(0xcc)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MVEX.sol\":827:857  address public platformAddress */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      sload(0xca)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/MVEX.sol\":976:1007  address public remainingAddress */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      sload(0xce)\n      tag_25\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/MVEX.sol\":1517:1617  function changeConfig(address _acbConfig)external onlyOwner{... */\n    tag_23:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_92\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_93\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/MVEX.sol\":1587:1596  acbConfig */\n      0xcc\n        /* \"contracts/MVEX.sol\":1587:1609  acbConfig = _acbConfig */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MVEX.sol\":1517:1617  function changeConfig(address _acbConfig)external onlyOwner{... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_99\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1989  _getImplementation */\n      tag_100\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      jump\t// in\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_103\n      jump\t// in\n    tag_101:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3436  _authorizeUpgrade(newImplementation) */\n      tag_105\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3418:3435  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3417  _authorizeUpgrade */\n      tag_106\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3436  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_105:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3497:3498  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3507  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_107\n      swap2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3485  newImplementation */\n      dup4\n      swap2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      swap1\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3467  _upgradeToAndCallUUPS */\n      tag_112\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3507  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_107:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_114:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_116\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1989  _getImplementation */\n      tag_100\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      jump\t// in\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_103\n      jump\t// in\n    tag_117:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3916  _authorizeUpgrade(newImplementation) */\n      tag_120\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3898:3915  newImplementation */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3897  _authorizeUpgrade */\n      tag_106\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3916  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_120:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3978  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_121\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3948:3965  newImplementation */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3967:3971  data */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3973:3977  true */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3947  _upgradeToAndCallUUPS */\n      tag_112\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3978  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_121:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_48:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3084:3091  bytes32 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2324:2328  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2333:2339  __self */\n      immutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2316:2339  address(this) == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3380:3382   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3362:3383   */\n      mstore\n        /* \"#utility.yul\":3419:3421   */\n      0x38\n        /* \"#utility.yul\":3399:3417   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3392:3422   */\n      mstore\n        /* \"#utility.yul\":3458:3492   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":3438:3456   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3431:3493   */\n      mstore\n      shl(0x42, 0x1b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":3509:3527   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3502:3556   */\n      mstore\n        /* \"#utility.yul\":3573:3592   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_97\n        /* \"#utility.yul\":3178:3598   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_123:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_128\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_93\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_130\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_131\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_60:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"contracts/MVEX.sol\":1210:1372  function initialize(address _acbConfig) initializer public {... */\n    tag_69:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3287  bool isTopLevelCall */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3291:3304  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3290:3304  !_initializing */\n      iszero\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      sload(0x00)\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3369:3370  1 */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3370  _initialized < 1 */\n      lt\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n    tag_134:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3335:3443  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_138\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3421  AddressUpgradeable.isContract(address(this)) */\n      tag_136\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3415:3419  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3406  AddressUpgradeable.isContract */\n      tag_137\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3421  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_136:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3421  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_138\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3425:3437  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3425:3442  _initialized == 1 */\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_138:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3805:3807   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3787:3808   */\n      mstore\n        /* \"#utility.yul\":3844:3846   */\n      0x2e\n        /* \"#utility.yul\":3824:3842   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3817:3847   */\n      mstore\n        /* \"#utility.yul\":3883:3917   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":3863:3881   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3856:3918   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":3934:3952   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3927:3971   */\n      mstore\n        /* \"#utility.yul\":3988:4007   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      tag_97\n        /* \"#utility.yul\":3603:4013   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n    tag_139:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3537  _initialized */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3541  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3540:3541  1 */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3541  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3616  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_142\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3585:3598  _initializing */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3585:3605  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3616  if (isTopLevelCall) {... */\n    tag_142:\n        /* \"contracts/MVEX.sol\":1280:1296  __Ownable_init() */\n      tag_144\n        /* \"contracts/MVEX.sol\":1280:1294  __Ownable_init */\n      tag_145\n        /* \"contracts/MVEX.sol\":1280:1296  __Ownable_init() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/MVEX.sol\":1307:1331  __UUPSUpgradeable_init() */\n      tag_146\n        /* \"contracts/MVEX.sol\":1307:1329  __UUPSUpgradeable_init */\n      tag_147\n        /* \"contracts/MVEX.sol\":1307:1331  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/MVEX.sol\":1343:1352  acbConfig */\n      0xcc\n        /* \"contracts/MVEX.sol\":1343:1364  acbConfig =_acbConfig */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3636:3735  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_121\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3686:3691  false */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3670:3691  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":4170:4206   */\n      dup2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":4158:4160   */\n      0x20\n        /* \"#utility.yul\":4143:4161   */\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3741  {... */\n      pop\n        /* \"contracts/MVEX.sol\":1210:1372  function initialize(address _acbConfig) initializer public {... */\n      pop\n      jump\t// out\n        /* \"contracts/MVEX.sol\":1630:2097  function usdtswap(uint256 amount)external {... */\n    tag_74:\n        /* \"contracts/MVEX.sol\":1727:1736  acbConfig */\n      sload(0xcc)\n        /* \"contracts/MVEX.sol\":1718:1744  ACCONFIG(acbConfig).usdt() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x2f48ab7d)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/MVEX.sol\":1689:1697  bool res */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MVEX.sol\":1727:1736  acbConfig */\n      and\n      swap2\n        /* \"contracts/MVEX.sol\":1718:1742  ACCONFIG(acbConfig).usdt */\n      0x2f48ab7d\n      swap2\n        /* \"contracts/MVEX.sol\":1718:1744  ACCONFIG(acbConfig).usdt() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/MVEX.sol\":1727:1736  acbConfig */\n      dup7\n        /* \"contracts/MVEX.sol\":1718:1744  ACCONFIG(acbConfig).usdt() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MVEX.sol\":1700:1758  IERC20Upgradeable(ACCONFIG(acbConfig).usdt()).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/MVEX.sol\":1759:1769  msg.sender */\n      caller\n        /* \"contracts/MVEX.sol\":1780:1789  acbConfig */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MVEX.sol\":1771:1808  ACCONFIG(acbConfig).teamRewardAddress */\n      and\n      0x4b21ddec\n        /* \"contracts/MVEX.sol\":1771:1810  ACCONFIG(acbConfig).teamRewardAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_158:\n        /* \"contracts/MVEX.sol\":1830:1839  acbConfig */\n      sload(0xcc)\n        /* \"contracts/MVEX.sol\":1821:1851  ACCONFIG(acbConfig).swapRate() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x698518e5)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/MVEX.sol\":1854:1858  1000 */\n      0x03e8\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MVEX.sol\":1830:1839  acbConfig */\n      and\n      swap2\n        /* \"contracts/MVEX.sol\":1821:1849  ACCONFIG(acbConfig).swapRate */\n      0x698518e5\n      swap2\n        /* \"contracts/MVEX.sol\":1821:1851  ACCONFIG(acbConfig).swapRate() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/MVEX.sol\":1830:1839  acbConfig */\n      dup7\n        /* \"contracts/MVEX.sol\":1821:1851  ACCONFIG(acbConfig).swapRate() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"contracts/MVEX.sol\":1812:1851  amount * ACCONFIG(acbConfig).swapRate() */\n      tag_163\n      swap1\n        /* \"contracts/MVEX.sol\":1812:1818  amount */\n      dup9\n        /* \"contracts/MVEX.sol\":1812:1851  amount * ACCONFIG(acbConfig).swapRate() */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/MVEX.sol\":1812:1858  amount * ACCONFIG(acbConfig).swapRate() / 1000 */\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"contracts/MVEX.sol\":1700:1859  IERC20Upgradeable(ACCONFIG(acbConfig).usdt()).transferFrom(msg.sender, ACCONFIG(acbConfig).teamRewardAddress(), amount * ACCONFIG(acbConfig).swapRate() / 1000) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/MVEX.sol\":1689:1859  bool res = IERC20Upgradeable(ACCONFIG(acbConfig).usdt()).transferFrom(msg.sender, ACCONFIG(acbConfig).teamRewardAddress(), amount * ACCONFIG(acbConfig).swapRate() / 1000) */\n      swap1\n      pop\n        /* \"contracts/MVEX.sol\":1873:1876  res */\n      dup1\n        /* \"contracts/MVEX.sol\":1870:2061  if(res){... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/MVEX.sol\":1919:1928  acbConfig */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MVEX.sol\":1910:1932  ACCONFIG(acbConfig).mv */\n      and\n      0x8f05cdf5\n        /* \"contracts/MVEX.sol\":1910:1934  ACCONFIG(acbConfig).mv() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MVEX.sol\":1892:1948  IERC20Upgradeable(ACCONFIG(acbConfig).mv()).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/MVEX.sol\":1959:1968  acbConfig */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MVEX.sol\":1950:1986  ACCONFIG(acbConfig).remainingAddress */\n      and\n      0xf97fe091\n        /* \"contracts/MVEX.sol\":1950:1988  ACCONFIG(acbConfig).remainingAddress() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_179:\n        /* \"contracts/MVEX.sol\":1989:1999  msg.sender */\n      caller\n        /* \"contracts/MVEX.sol\":2044:2048  1000 */\n      0x03e8\n        /* \"contracts/MVEX.sol\":2020:2029  acbConfig */\n      0xcc\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MVEX.sol\":2011:2039  ACCONFIG(acbConfig).swapRate */\n      and\n      0x698518e5\n        /* \"contracts/MVEX.sol\":2011:2041  ACCONFIG(acbConfig).swapRate() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_182:\n        /* \"contracts/MVEX.sol\":2002:2041  amount * ACCONFIG(acbConfig).swapRate() */\n      tag_183\n      swap1\n        /* \"contracts/MVEX.sol\":2002:2008  amount */\n      dup9\n        /* \"contracts/MVEX.sol\":2002:2041  amount * ACCONFIG(acbConfig).swapRate() */\n      tag_164\n      jump\t// in\n    tag_183:\n        /* \"contracts/MVEX.sol\":2002:2048  amount * ACCONFIG(acbConfig).swapRate() / 1000 */\n      tag_184\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_184:\n        /* \"contracts/MVEX.sol\":1892:2049  IERC20Upgradeable(ACCONFIG(acbConfig).mv()).transferFrom( ACCONFIG(acbConfig).remainingAddress(),msg.sender , amount * ACCONFIG(acbConfig).swapRate() / 1000) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_188:\n      pop\n        /* \"contracts/MVEX.sol\":1672:2097  {... */\n      pop\n        /* \"contracts/MVEX.sol\":1630:2097  function usdtswap(uint256 amount)external {... */\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_190\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_93\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6018:6020   */\n      0x20\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6000:6021   */\n      mstore\n        /* \"#utility.yul\":6057:6059   */\n      0x26\n        /* \"#utility.yul\":6037:6055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6030:6060   */\n      mstore\n        /* \"#utility.yul\":6096:6130   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6076:6094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6069:6131   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6147:6165   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6140:6176   */\n      mstore\n        /* \"#utility.yul\":6193:6212   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_97\n        /* \"#utility.yul\":5816:6218   */\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_192:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_107\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_131\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_93:\n        /* \"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      tag_199\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1667  owner */\n      tag_60\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6425:6427   */\n      0x20\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6407:6428   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6444:6462   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6437:6467   */\n      mstore\n        /* \"#utility.yul\":6503:6537   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6483:6501   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6476:6538   */\n      mstore\n        /* \"#utility.yul\":6555:6573   */\n      0x64\n      add\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_97\n        /* \"#utility.yul\":6223:6579   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1509:1660  function _getImplementation() internal view returns (address) {... */\n    tag_100:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1588:1653  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1509:1660  function _getImplementation() internal view returns (address) {... */\n      jump\t// out\n        /* \"contracts/MVEX.sol\":1380:1496  function _authorizeUpgrade(address newImplementation)... */\n    tag_106:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_107\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_93\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2884:3858  function _upgradeToAndCallUUPS(... */\n    tag_112:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1023:1089  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3330:3389  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      sload\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3326:3852  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3442  _setImplementation(newImplementation) */\n      tag_188\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3424:3441  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3423  _setImplementation */\n      tag_214\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3442  _setImplementation(newImplementation) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3326:3852  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_212:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3506:3523  newImplementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3477:3538  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3477:3540  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_216\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_217\n      swap2\n      dup2\n      add\n      swap1\n      tag_162\n      jump\t// in\n    tag_217:\n      0x01\n    tag_216:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3473:3775  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_219\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6975:6977   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6957:6978   */\n      mstore\n        /* \"#utility.yul\":7014:7016   */\n      0x2e\n        /* \"#utility.yul\":6994:7012   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6987:7017   */\n      mstore\n        /* \"#utility.yul\":7053:7087   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":7033:7051   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7026:7088   */\n      mstore\n      shl(0x90, 0x6f6e206973206e6f742055555053)\n        /* \"#utility.yul\":7104:7122   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7097:7141   */\n      mstore\n        /* \"#utility.yul\":7158:7177   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      tag_97\n        /* \"#utility.yul\":6773:7183   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3473:3775  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_219:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3590:3618  slot == _IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7390:7392   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7372:7393   */\n      mstore\n        /* \"#utility.yul\":7429:7431   */\n      0x29\n        /* \"#utility.yul\":7409:7427   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7402:7432   */\n      mstore\n        /* \"#utility.yul\":7468:7502   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":7448:7466   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7441:7503   */\n      mstore\n      shl(0xba, 0x1a58589b1955555251)\n        /* \"#utility.yul\":7519:7537   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7512:7551   */\n      mstore\n        /* \"#utility.yul\":7568:7587   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_97\n        /* \"#utility.yul\":7188:7593   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n    tag_226:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3541:3679  returns (bytes32 slot) {... */\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3841  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_188\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3806:3823  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3825:3829  data */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3831:3840  forceCall */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3805  _upgradeToAndCall */\n      tag_230\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3841  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      and\n      extcodesize\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_145:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_236\n      jump\t// in\n    tag_234:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_130\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_239\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1042:1109  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_147:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_236\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1751:2032  function _setImplementation(address newImplementation) private {... */\n    tag_214:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1880  AddressUpgradeable.isContract(newImplementation) */\n      tag_248\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1862:1879  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1861  AddressUpgradeable.isContract */\n      tag_137\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1880  AddressUpgradeable.isContract(newImplementation) */\n      jump\t// in\n    tag_248:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8212:8214   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8194:8215   */\n      mstore\n        /* \"#utility.yul\":8251:8253   */\n      0x2d\n        /* \"#utility.yul\":8231:8249   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8224:8254   */\n      mstore\n        /* \"#utility.yul\":8290:8324   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":8270:8288   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8263:8325   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":8341:8359   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8334:8377   */\n      mstore\n        /* \"#utility.yul\":8394:8413   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_97\n        /* \"#utility.yul\":8010:8419   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_249:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1940:2025  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1751:2032  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2424:2712  function _upgradeToAndCall(... */\n    tag_230:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2591  _upgradeTo(newImplementation) */\n      tag_254\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2573:2590  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2572  _upgradeTo */\n      tag_255\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2591  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_254:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2619:2620  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2609  data */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2616  data.length */\n      mload\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2620  data.length > 0 */\n      gt\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2633  data.length > 0 || forceCall */\n      dup1\n      tag_256\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2624:2633  forceCall */\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2633  data.length > 0 || forceCall */\n    tag_256:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2601:2706  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2695  _functionDelegateCall(newImplementation, data) */\n      tag_258\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2671:2688  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2690:2694  data */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2670  _functionDelegateCall */\n      tag_259\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2695  _functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_258:\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2424:2712  function _upgradeToAndCall(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_239:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_236\n      jump\t// in\n    tag_261:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_130\n        /* \"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_131\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2138:2290  function _upgradeTo(address newImplementation) internal {... */\n    tag_255:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2241  _setImplementation(newImplementation) */\n      tag_267\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2223:2240  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2222  _setImplementation */\n      tag_214\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2241  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_267:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2256:2283  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2138:2290  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6780:7235  function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {... */\n    tag_259:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6863:6875  bytes memory */\n      0x60\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6932  AddressUpgradeable.isContract(target) */\n      tag_269\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6925:6931  target */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6924  AddressUpgradeable.isContract */\n      tag_137\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6932  AddressUpgradeable.isContract(target) */\n      jump\t// in\n    tag_269:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8626:8628   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8608:8629   */\n      mstore\n        /* \"#utility.yul\":8665:8667   */\n      0x26\n        /* \"#utility.yul\":8645:8663   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8638:8668   */\n      mstore\n        /* \"#utility.yul\":8704:8738   */\n      0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n        /* \"#utility.yul\":8684:8702   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8677:8739   */\n      mstore\n      shl(0xd2, 0x1b9d1c9858dd)\n        /* \"#utility.yul\":8755:8773   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8748:8784   */\n      mstore\n        /* \"#utility.yul\":8801:8820   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      tag_97\n        /* \"#utility.yul\":8424:8826   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n    tag_270:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7046:7058  bool success */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7060:7083  bytes memory returndata */\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7093  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7106  target.delegatecall */\n      and\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7107:7111  data */\n      dup5\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7112  target.delegatecall(data) */\n      mload(0x40)\n      tag_273\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_277\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_276)\n    tag_277:\n      0x60\n      swap2\n      pop\n    tag_276:\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7045:7112  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      tag_278\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7165:7172  success */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7174:7184  returndata */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7164  AddressUpgradeable.verifyCallResult */\n      tag_279\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_278:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7122:7228  return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6780:7235  function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {... */\n    tag_268:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7438:7733  function verifyCallResult(... */\n    tag_279:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7584:7596  bytes memory */\n      0x60\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7612:7619  success */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7608:7727  if (success) {... */\n      iszero\n      tag_281\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7642:7652  returndata */\n      dup2\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7635:7652  return returndata */\n      jump(tag_283)\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7608:7727  if (success) {... */\n    tag_281:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7716  _revert(returndata, errorMessage) */\n      tag_283\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7691:7701  returndata */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7703:7715  errorMessage */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7690  _revert */\n      tag_284\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7716  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_283:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7438:7733  function verifyCallResult(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7739:8279  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_284:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7898:7915  returndata.length */\n      dup2\n      mload\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7898:7919  returndata.length > 0 */\n      iszero\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7894:8273  if (returndata.length > 0) {... */\n      tag_286\n      jumpi\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8126:8136  returndata */\n      dup2\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8120:8137  mload(returndata) */\n      mload\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8182:8197  returndata_size */\n      dup1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8169:8179  returndata */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8165:8167  32 */\n      0x20\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8161:8180  add(32, returndata) */\n      add\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8154:8198  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7894:8273  if (returndata.length > 0) {... */\n    tag_286:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8249:8261  errorMessage */\n      dup1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8242:8262  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n        /* \"#utility.yul\":14:145   */\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:397   */\n    tag_22:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_296:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_283\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":792:919   */\n    tag_110:\n        /* \"#utility.yul\":853:863   */\n      0x4e487b71\n        /* \"#utility.yul\":848:851   */\n      0xe0\n        /* \"#utility.yul\":844:864   */\n      shl\n        /* \"#utility.yul\":841:842   */\n      0x00\n        /* \"#utility.yul\":834:865   */\n      mstore\n        /* \"#utility.yul\":884:888   */\n      0x41\n        /* \"#utility.yul\":881:882   */\n      0x04\n        /* \"#utility.yul\":874:889   */\n      mstore\n        /* \"#utility.yul\":908:912   */\n      0x24\n        /* \"#utility.yul\":905:906   */\n      0x00\n        /* \"#utility.yul\":898:913   */\n      revert\n        /* \"#utility.yul\":924:1980   */\n    tag_44:\n        /* \"#utility.yul\":1001:1007   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup1\n        /* \"#utility.yul\":1062:1064   */\n      0x40\n        /* \"#utility.yul\":1050:1059   */\n      dup4\n        /* \"#utility.yul\":1041:1048   */\n      dup6\n        /* \"#utility.yul\":1037:1060   */\n      sub\n        /* \"#utility.yul\":1033:1065   */\n      slt\n        /* \"#utility.yul\":1030:1082   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1078:1079   */\n      0x00\n        /* \"#utility.yul\":1075:1076   */\n      dup1\n        /* \"#utility.yul\":1068:1080   */\n      revert\n        /* \"#utility.yul\":1030:1082   */\n    tag_302:\n        /* \"#utility.yul\":1117:1126   */\n      dup3\n        /* \"#utility.yul\":1104:1127   */\n      calldataload\n        /* \"#utility.yul\":1136:1167   */\n      tag_303\n        /* \"#utility.yul\":1161:1166   */\n      dup2\n        /* \"#utility.yul\":1136:1167   */\n      tag_290\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1186:1191   */\n      swap2\n      pop\n        /* \"#utility.yul\":1242:1244   */\n      0x20\n        /* \"#utility.yul\":1227:1245   */\n      dup4\n      add\n        /* \"#utility.yul\":1214:1246   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1295:1309   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1292:1326   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1322:1323   */\n      0x00\n        /* \"#utility.yul\":1319:1320   */\n      dup1\n        /* \"#utility.yul\":1312:1324   */\n      revert\n        /* \"#utility.yul\":1292:1326   */\n    tag_304:\n        /* \"#utility.yul\":1360:1366   */\n      dup2\n        /* \"#utility.yul\":1349:1358   */\n      dup6\n        /* \"#utility.yul\":1345:1367   */\n      add\n        /* \"#utility.yul\":1335:1367   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1412   */\n      dup6\n        /* \"#utility.yul\":1398:1402   */\n      0x1f\n        /* \"#utility.yul\":1394:1396   */\n      dup4\n        /* \"#utility.yul\":1390:1403   */\n      add\n        /* \"#utility.yul\":1386:1413   */\n      slt\n        /* \"#utility.yul\":1376:1431   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1424:1425   */\n      dup1\n        /* \"#utility.yul\":1417:1429   */\n      revert\n        /* \"#utility.yul\":1376:1431   */\n    tag_305:\n        /* \"#utility.yul\":1463:1465   */\n      dup2\n        /* \"#utility.yul\":1450:1466   */\n      calldataload\n        /* \"#utility.yul\":1485:1487   */\n      dup2\n        /* \"#utility.yul\":1481:1483   */\n      dup2\n        /* \"#utility.yul\":1478:1488   */\n      gt\n        /* \"#utility.yul\":1475:1511   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":1491:1509   */\n      tag_307\n      tag_110\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1566:1568   */\n      0x40\n        /* \"#utility.yul\":1560:1569   */\n      mload\n        /* \"#utility.yul\":1534:1536   */\n      0x1f\n        /* \"#utility.yul\":1620:1633   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1616:1638   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1640:1642   */\n      0x3f\n        /* \"#utility.yul\":1612:1643   */\n      add\n        /* \"#utility.yul\":1608:1648   */\n      and\n        /* \"#utility.yul\":1596:1649   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1664:1682   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1684:1706   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1661:1707   */\n      or\n        /* \"#utility.yul\":1658:1730   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1710:1728   */\n      tag_309\n      tag_110\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1750:1760   */\n      dup2\n        /* \"#utility.yul\":1746:1748   */\n      0x40\n        /* \"#utility.yul\":1739:1761   */\n      mstore\n        /* \"#utility.yul\":1785:1787   */\n      dup3\n        /* \"#utility.yul\":1777:1783   */\n      dup2\n        /* \"#utility.yul\":1770:1788   */\n      mstore\n        /* \"#utility.yul\":1825:1832   */\n      dup9\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1815:1817   */\n      dup5\n        /* \"#utility.yul\":1811:1813   */\n      dup8\n        /* \"#utility.yul\":1807:1818   */\n      add\n        /* \"#utility.yul\":1803:1823   */\n      add\n        /* \"#utility.yul\":1800:1833   */\n      gt\n        /* \"#utility.yul\":1797:1850   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1846:1847   */\n      0x00\n        /* \"#utility.yul\":1843:1844   */\n      dup1\n        /* \"#utility.yul\":1836:1848   */\n      revert\n        /* \"#utility.yul\":1797:1850   */\n    tag_310:\n        /* \"#utility.yul\":1902:1904   */\n      dup3\n        /* \"#utility.yul\":1897:1899   */\n      0x20\n        /* \"#utility.yul\":1893:1895   */\n      dup7\n        /* \"#utility.yul\":1889:1900   */\n      add\n        /* \"#utility.yul\":1884:1886   */\n      0x20\n        /* \"#utility.yul\":1876:1882   */\n      dup4\n        /* \"#utility.yul\":1872:1887   */\n      add\n        /* \"#utility.yul\":1859:1905   */\n      calldatacopy\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1942:1944   */\n      0x20\n        /* \"#utility.yul\":1937:1939   */\n      dup5\n        /* \"#utility.yul\":1929:1935   */\n      dup4\n        /* \"#utility.yul\":1925:1940   */\n      add\n        /* \"#utility.yul\":1921:1945   */\n      add\n        /* \"#utility.yul\":1914:1949   */\n      mstore\n        /* \"#utility.yul\":1968:1974   */\n      dup1\n        /* \"#utility.yul\":1958:1974   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":924:1980   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2167:2347   */\n    tag_73:\n        /* \"#utility.yul\":2226:2232   */\n      0x00\n        /* \"#utility.yul\":2279:2281   */\n      0x20\n        /* \"#utility.yul\":2267:2276   */\n      dup3\n        /* \"#utility.yul\":2258:2265   */\n      dup5\n        /* \"#utility.yul\":2254:2277   */\n      sub\n        /* \"#utility.yul\":2250:2282   */\n      slt\n        /* \"#utility.yul\":2247:2299   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":2295:2296   */\n      0x00\n        /* \"#utility.yul\":2292:2293   */\n      dup1\n        /* \"#utility.yul\":2285:2297   */\n      revert\n        /* \"#utility.yul\":2247:2299   */\n    tag_313:\n      pop\n        /* \"#utility.yul\":2318:2341   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2167:2347   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2352:2760   */\n    tag_98:\n        /* \"#utility.yul\":2554:2556   */\n      0x20\n        /* \"#utility.yul\":2536:2557   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2593:2595   */\n      0x2c\n        /* \"#utility.yul\":2573:2591   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2566:2596   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":2627:2629   */\n      0x40\n        /* \"#utility.yul\":2612:2630   */\n      dup3\n      add\n        /* \"#utility.yul\":2605:2667   */\n      mstore\n      shl(0xa2, 0x19195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":2698:2700   */\n      0x60\n        /* \"#utility.yul\":2683:2701   */\n      dup3\n      add\n        /* \"#utility.yul\":2676:2718   */\n      mstore\n        /* \"#utility.yul\":2750:2753   */\n      0x80\n        /* \"#utility.yul\":2735:2754   */\n      add\n      swap1\n        /* \"#utility.yul\":2352:2760   */\n      jump\t// out\n        /* \"#utility.yul\":2765:3173   */\n    tag_103:\n        /* \"#utility.yul\":2967:2969   */\n      0x20\n        /* \"#utility.yul\":2949:2970   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3006:3008   */\n      0x2c\n        /* \"#utility.yul\":2986:3004   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2979:3009   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":3040:3042   */\n      0x40\n        /* \"#utility.yul\":3025:3043   */\n      dup3\n      add\n        /* \"#utility.yul\":3018:3080   */\n      mstore\n      shl(0xa0, 0x6163746976652070726f7879)\n        /* \"#utility.yul\":3111:3113   */\n      0x60\n        /* \"#utility.yul\":3096:3114   */\n      dup3\n      add\n        /* \"#utility.yul\":3089:3131   */\n      mstore\n        /* \"#utility.yul\":3163:3166   */\n      0x80\n        /* \"#utility.yul\":3148:3167   */\n      add\n      swap1\n        /* \"#utility.yul\":2765:3173   */\n      jump\t// out\n        /* \"#utility.yul\":4217:4468   */\n    tag_155:\n        /* \"#utility.yul\":4287:4293   */\n      0x00\n        /* \"#utility.yul\":4340:4342   */\n      0x20\n        /* \"#utility.yul\":4328:4337   */\n      dup3\n        /* \"#utility.yul\":4319:4326   */\n      dup5\n        /* \"#utility.yul\":4315:4338   */\n      sub\n        /* \"#utility.yul\":4311:4343   */\n      slt\n        /* \"#utility.yul\":4308:4360   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4356:4357   */\n      0x00\n        /* \"#utility.yul\":4353:4354   */\n      dup1\n        /* \"#utility.yul\":4346:4358   */\n      revert\n        /* \"#utility.yul\":4308:4360   */\n    tag_320:\n        /* \"#utility.yul\":4388:4397   */\n      dup2\n        /* \"#utility.yul\":4382:4398   */\n      mload\n        /* \"#utility.yul\":4407:4438   */\n      tag_283\n        /* \"#utility.yul\":4432:4437   */\n      dup2\n        /* \"#utility.yul\":4407:4438   */\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":4473:4657   */\n    tag_162:\n        /* \"#utility.yul\":4543:4549   */\n      0x00\n        /* \"#utility.yul\":4596:4598   */\n      0x20\n        /* \"#utility.yul\":4584:4593   */\n      dup3\n        /* \"#utility.yul\":4575:4582   */\n      dup5\n        /* \"#utility.yul\":4571:4594   */\n      sub\n        /* \"#utility.yul\":4567:4599   */\n      slt\n        /* \"#utility.yul\":4564:4616   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":4612:4613   */\n      0x00\n        /* \"#utility.yul\":4609:4610   */\n      dup1\n        /* \"#utility.yul\":4602:4614   */\n      revert\n        /* \"#utility.yul\":4564:4616   */\n    tag_323:\n      pop\n        /* \"#utility.yul\":4635:4651   */\n      mload\n      swap2\n        /* \"#utility.yul\":4473:4657   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4927   */\n    tag_164:\n        /* \"#utility.yul\":4735:4744   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4766:4775   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4783:4798   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4777:4799   */\n      dup5\n      eq\n        /* \"#utility.yul\":4763:4800   */\n      or\n        /* \"#utility.yul\":4753:4921   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4843:4853   */\n      0x4e487b71\n        /* \"#utility.yul\":4838:4841   */\n      0xe0\n        /* \"#utility.yul\":4834:4854   */\n      shl\n        /* \"#utility.yul\":4831:4832   */\n      0x00\n        /* \"#utility.yul\":4824:4855   */\n      mstore\n        /* \"#utility.yul\":4878:4882   */\n      0x11\n        /* \"#utility.yul\":4875:4876   */\n      0x04\n        /* \"#utility.yul\":4868:4883   */\n      mstore\n        /* \"#utility.yul\":4906:4910   */\n      0x24\n        /* \"#utility.yul\":4903:4904   */\n      0x00\n        /* \"#utility.yul\":4896:4911   */\n      revert\n        /* \"#utility.yul\":4932:5149   */\n    tag_166:\n        /* \"#utility.yul\":4972:4973   */\n      0x00\n        /* \"#utility.yul\":4998:4999   */\n      dup3\n        /* \"#utility.yul\":4988:5120   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":5042:5052   */\n      0x4e487b71\n        /* \"#utility.yul\":5037:5040   */\n      0xe0\n        /* \"#utility.yul\":5033:5053   */\n      shl\n        /* \"#utility.yul\":5030:5031   */\n      0x00\n        /* \"#utility.yul\":5023:5054   */\n      mstore\n        /* \"#utility.yul\":5077:5081   */\n      0x12\n        /* \"#utility.yul\":5074:5075   */\n      0x04\n        /* \"#utility.yul\":5067:5082   */\n      mstore\n        /* \"#utility.yul\":5105:5109   */\n      0x24\n        /* \"#utility.yul\":5102:5103   */\n      0x00\n        /* \"#utility.yul\":5095:5110   */\n      revert\n        /* \"#utility.yul\":4988:5120   */\n    tag_327:\n      pop\n        /* \"#utility.yul\":5134:5143   */\n      div\n      swap1\n        /* \"#utility.yul\":4932:5149   */\n      jump\t// out\n        /* \"#utility.yul\":5154:5529   */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5412:5427   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":5394:5428   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5464:5479   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5444:5462   */\n      dup3\n      add\n        /* \"#utility.yul\":5437:5480   */\n      mstore\n        /* \"#utility.yul\":5511:5513   */\n      0x40\n        /* \"#utility.yul\":5496:5514   */\n      dup2\n      add\n        /* \"#utility.yul\":5489:5523   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5344:5346   */\n      0x60\n        /* \"#utility.yul\":5329:5347   */\n      add\n      swap1\n        /* \"#utility.yul\":5154:5529   */\n      jump\t// out\n        /* \"#utility.yul\":5534:5811   */\n    tag_172:\n        /* \"#utility.yul\":5601:5607   */\n      0x00\n        /* \"#utility.yul\":5654:5656   */\n      0x20\n        /* \"#utility.yul\":5642:5651   */\n      dup3\n        /* \"#utility.yul\":5633:5640   */\n      dup5\n        /* \"#utility.yul\":5629:5652   */\n      sub\n        /* \"#utility.yul\":5625:5657   */\n      slt\n        /* \"#utility.yul\":5622:5674   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":5670:5671   */\n      0x00\n        /* \"#utility.yul\":5667:5668   */\n      dup1\n        /* \"#utility.yul\":5660:5672   */\n      revert\n        /* \"#utility.yul\":5622:5674   */\n    tag_330:\n        /* \"#utility.yul\":5702:5711   */\n      dup2\n        /* \"#utility.yul\":5696:5712   */\n      mload\n        /* \"#utility.yul\":5755:5760   */\n      dup1\n        /* \"#utility.yul\":5748:5761   */\n      iszero\n        /* \"#utility.yul\":5741:5762   */\n      iszero\n        /* \"#utility.yul\":5734:5739   */\n      dup2\n        /* \"#utility.yul\":5731:5763   */\n      eq\n        /* \"#utility.yul\":5721:5781   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":5777:5778   */\n      0x00\n        /* \"#utility.yul\":5774:5775   */\n      dup1\n        /* \"#utility.yul\":5767:5779   */\n      revert\n        /* \"#utility.yul\":7598:8005   */\n    tag_236:\n        /* \"#utility.yul\":7800:7802   */\n      0x20\n        /* \"#utility.yul\":7782:7803   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7839:7841   */\n      0x2b\n        /* \"#utility.yul\":7819:7837   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7812:7842   */\n      mstore\n        /* \"#utility.yul\":7878:7912   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":7873:7875   */\n      0x40\n        /* \"#utility.yul\":7858:7876   */\n      dup3\n      add\n        /* \"#utility.yul\":7851:7913   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":7944:7946   */\n      0x60\n        /* \"#utility.yul\":7929:7947   */\n      dup3\n      add\n        /* \"#utility.yul\":7922:7963   */\n      mstore\n        /* \"#utility.yul\":7995:7998   */\n      0x80\n        /* \"#utility.yul\":7980:7999   */\n      add\n      swap1\n        /* \"#utility.yul\":7598:8005   */\n      jump\t// out\n        /* \"#utility.yul\":8831:9081   */\n    tag_291:\n        /* \"#utility.yul\":8916:8917   */\n      0x00\n        /* \"#utility.yul\":8926:9039   */\n    tag_342:\n        /* \"#utility.yul\":8940:8946   */\n      dup4\n        /* \"#utility.yul\":8937:8938   */\n      dup2\n        /* \"#utility.yul\":8934:8947   */\n      lt\n        /* \"#utility.yul\":8926:9039   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":9016:9027   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9010:9028   */\n      mload\n        /* \"#utility.yul\":8997:9008   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":8990:9029   */\n      mstore\n        /* \"#utility.yul\":8962:8964   */\n      0x20\n        /* \"#utility.yul\":8955:8965   */\n      add\n        /* \"#utility.yul\":8926:9039   */\n      jump(tag_342)\n    tag_344:\n      pop\n      pop\n        /* \"#utility.yul\":9073:9074   */\n      0x00\n        /* \"#utility.yul\":9055:9071   */\n      swap2\n      add\n        /* \"#utility.yul\":9048:9075   */\n      mstore\n        /* \"#utility.yul\":8831:9081   */\n      jump\t// out\n        /* \"#utility.yul\":9086:9373   */\n    tag_274:\n        /* \"#utility.yul\":9215:9218   */\n      0x00\n        /* \"#utility.yul\":9253:9259   */\n      dup3\n        /* \"#utility.yul\":9247:9260   */\n      mload\n        /* \"#utility.yul\":9269:9335   */\n      tag_346\n        /* \"#utility.yul\":9328:9334   */\n      dup2\n        /* \"#utility.yul\":9323:9326   */\n      dup5\n        /* \"#utility.yul\":9316:9320   */\n      0x20\n        /* \"#utility.yul\":9308:9314   */\n      dup8\n        /* \"#utility.yul\":9304:9321   */\n      add\n        /* \"#utility.yul\":9269:9335   */\n      tag_291\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9351:9367   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":9086:9373   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9378:9774   */\n    tag_289:\n        /* \"#utility.yul\":9527:9529   */\n      0x20\n        /* \"#utility.yul\":9516:9525   */\n      dup2\n        /* \"#utility.yul\":9509:9530   */\n      mstore\n        /* \"#utility.yul\":9490:9494   */\n      0x00\n        /* \"#utility.yul\":9559:9565   */\n      dup3\n        /* \"#utility.yul\":9553:9566   */\n      mload\n        /* \"#utility.yul\":9602:9608   */\n      dup1\n        /* \"#utility.yul\":9597:9599   */\n      0x20\n        /* \"#utility.yul\":9586:9595   */\n      dup5\n        /* \"#utility.yul\":9582:9600   */\n      add\n        /* \"#utility.yul\":9575:9609   */\n      mstore\n        /* \"#utility.yul\":9618:9697   */\n      tag_348\n        /* \"#utility.yul\":9690:9696   */\n      dup2\n        /* \"#utility.yul\":9685:9687   */\n      0x40\n        /* \"#utility.yul\":9674:9683   */\n      dup6\n        /* \"#utility.yul\":9670:9688   */\n      add\n        /* \"#utility.yul\":9665:9667   */\n      0x20\n        /* \"#utility.yul\":9657:9663   */\n      dup8\n        /* \"#utility.yul\":9653:9668   */\n      add\n        /* \"#utility.yul\":9618:9697   */\n      tag_291\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9758:9760   */\n      0x1f\n        /* \"#utility.yul\":9737:9752   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9733:9762   */\n      and\n        /* \"#utility.yul\":9718:9763   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":9765:9767   */\n      0x40\n        /* \"#utility.yul\":9714:9768   */\n      add\n      swap3\n        /* \"#utility.yul\":9378:9774   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88 46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220ebb6973c87f7d6b9eeebf9e331351f202beacdfea13a4f4cc2ec024d79589c7d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_862": {
									"entryPoint": 33,
									"id": 862,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:608:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:229:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:12",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:12"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:34:12",
																		"type": "",
																		"value": "Initializable: contract is initi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "360:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:12"
																	},
																	{
																		"hexValue": "616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "365:9:12",
																		"type": "",
																		"value": "alizing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:37:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "384:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "407:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "384:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:12",
														"type": ""
													}
												],
												"src": "14:403:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "552:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "529:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "586:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "594:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "564:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "488:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "510:4:12",
														"type": ""
													}
												],
												"src": "422:184:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100de565b5f54610100900460ff161561008c5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff90811610156100dc575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516113546101125f395f818161030001528181610349015281816103d001528181610410015261048b01526113545ff3fe6080604052600436106100cd575f3560e01c8063210835ae146100d15780632f48ab7d146100f25780633659cfe61461012e57806336e0cac61461014d5780634b21ddec146101705780634f1ef2861461018f57806352d1902d146101a2578063698518e5146101b6578063715018a6146101cb5780638da5cb5b146101df578063b2cf085e146101f3578063c4d66de814610212578063d0675bfd14610231578063dba64f8f14610250578063dbe55e561461026f578063f2fde38b1461028e578063f97fe091146102ad575b5f80fd5b3480156100dc575f80fd5b506100f06100eb366004610fd1565b6102cc565b005b3480156100fd575f80fd5b5060c954610111906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610139575f80fd5b506100f0610148366004610fd1565b6102f6565b348015610158575f80fd5b5061016260cf5481565b604051908152602001610125565b34801561017b575f80fd5b5060cd54610111906001600160a01b031681565b6100f061019d366004611000565b6103c6565b3480156101ad575f80fd5b5061016261047f565b3480156101c1575f80fd5b5061016260d05481565b3480156101d6575f80fd5b506100f061052b565b3480156101ea575f80fd5b5061011161053e565b3480156101fe575f80fd5b5060cb54610111906001600160a01b031681565b34801561021d575f80fd5b506100f061022c366004610fd1565b61054d565b34801561023c575f80fd5b506100f061024b3660046110bd565b610682565b34801561025b575f80fd5b5060cc54610111906001600160a01b031681565b34801561027a575f80fd5b5060ca54610111906001600160a01b031681565b348015610299575f80fd5b506100f06102a8366004610fd1565b610a3c565b3480156102b8575f80fd5b5060ce54610111906001600160a01b031681565b6102d4610ab2565b60cc80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103475760405162461bcd60e51b815260040161033e906110d4565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610379610b11565b6001600160a01b03161461039f5760405162461bcd60e51b815260040161033e9061110d565b6103a881610b2c565b604080515f808252602082019092526103c391839190610b34565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361040e5760405162461bcd60e51b815260040161033e906110d4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610440610b11565b6001600160a01b0316146104665760405162461bcd60e51b815260040161033e9061110d565b61046f82610b2c565b61047b82826001610b34565b5050565b5f306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105195760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b606482015260840161033e565b505f805160206112d883398151915290565b610533610ab2565b61053c5f610c9e565b565b6033546001600160a01b031690565b5f54610100900460ff161580801561056b57505f54600160ff909116105b8061058b575061057a30610cef565b15801561058b57505f5460ff166001145b6105ee5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161033e565b5f805460ff19166001179055801561060f575f805461ff0019166101001790555b610617610cfe565b61061f610d2c565b60cc80546001600160a01b0319166001600160a01b038416179055801561047b575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60cc5460408051632f48ab7d60e01b815290515f926001600160a01b031691632f48ab7d9160048083019260209291908290030181865afa1580156106c9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ed9190611146565b6001600160a01b03166323b872dd3360cc5f9054906101000a90046001600160a01b03166001600160a01b0316634b21ddec6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107709190611146565b60cc546040805163698518e560e01b815290516103e8926001600160a01b03169163698518e59160048083019260209291908290030181865afa1580156107b9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107dd9190611161565b6107e79088611178565b6107f1919061119b565b6040518463ffffffff1660e01b815260040161080f939291906111ba565b6020604051808303815f875af115801561082b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084f91906111de565b9050801561047b5760cc5f9054906101000a90046001600160a01b03166001600160a01b0316638f05cdf56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108cb9190611146565b6001600160a01b03166323b872dd60cc5f9054906101000a90046001600160a01b03166001600160a01b031663f97fe0916040518163ffffffff1660e01b8152600401602060405180830381865afa158015610929573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094d9190611146565b336103e860cc5f9054906101000a90046001600160a01b03166001600160a01b031663698518e56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109a1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109c59190611161565b6109cf9088611178565b6109d9919061119b565b6040518463ffffffff1660e01b81526004016109f7939291906111ba565b6020604051808303815f875af1158015610a13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3791906111de565b505050565b610a44610ab2565b6001600160a01b038116610aa95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161033e565b6103c381610c9e565b33610abb61053e565b6001600160a01b03161461053c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161033e565b5f805160206112d8833981519152546001600160a01b031690565b6103c3610ab2565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b6757610a3783610d52565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610bc1575060408051601f3d908101601f19168201909252610bbe91810190611161565b60015b610c245760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161033e565b5f805160206112d88339815191528114610c925760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161033e565b50610a37838383610deb565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03163b151590565b5f54610100900460ff16610d245760405162461bcd60e51b815260040161033e906111fd565b61053c610e15565b5f54610100900460ff1661053c5760405162461bcd60e51b815260040161033e906111fd565b610d5b81610cef565b610dbd5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161033e565b5f805160206112d883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610df483610e44565b5f82511180610e005750805b15610a3757610e0f8383610e83565b50505050565b5f54610100900460ff16610e3b5760405162461bcd60e51b815260040161033e906111fd565b61053c33610c9e565b610e4d81610d52565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b6060610e8e83610cef565b610ee95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161033e565b5f80846001600160a01b031684604051610f03919061126a565b5f60405180830381855af49150503d805f8114610f3b576040519150601f19603f3d011682016040523d82523d5f602084013e610f40565b606091505b5091509150610f6882826040518060600160405280602781526020016112f860279139610f73565b925050505b92915050565b60608315610f82575081610f8c565b610f8c8383610f93565b9392505050565b815115610fa35781518083602001fd5b8060405162461bcd60e51b815260040161033e9190611285565b6001600160a01b03811681146103c3575f80fd5b5f60208284031215610fe1575f80fd5b8135610f8c81610fbd565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611011575f80fd5b823561101c81610fbd565b915060208301356001600160401b0380821115611037575f80fd5b818501915085601f83011261104a575f80fd5b81358181111561105c5761105c610fec565b604051601f8201601f19908116603f0116810190838211818310171561108457611084610fec565b8160405282815288602084870101111561109c575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f602082840312156110cd575f80fd5b5035919050565b6020808252602c908201525f805160206112b883398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201525f805160206112b883398151915260408201526b6163746976652070726f787960a01b606082015260800190565b5f60208284031215611156575f80fd5b8151610f8c81610fbd565b5f60208284031215611171575f80fd5b5051919050565b8082028115828204841417610f6d57634e487b7160e01b5f52601160045260245ffd5b5f826111b557634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f602082840312156111ee575f80fd5b81518015158114610f8c575f80fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f5b8381101561126257818101518382015260200161124a565b50505f910152565b5f825161127b818460208701611248565b9190910192915050565b602081525f82518060208401526112a3816040850160208701611248565b601f01601f1916919091016040019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ebb6973c87f7d6b9eeebf9e331351f202beacdfea13a4f4cc2ec024d79589c7d64736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND LT ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1354 PUSH2 0x112 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x300 ADD MSTORE DUP2 DUP2 PUSH2 0x349 ADD MSTORE DUP2 DUP2 PUSH2 0x3D0 ADD MSTORE DUP2 DUP2 PUSH2 0x410 ADD MSTORE PUSH2 0x48B ADD MSTORE PUSH2 0x1354 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x210835AE EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x36E0CAC6 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x4B21DDEC EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x698518E5 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xB2CF085E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xD0675BFD EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xDBA64F8F EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xDBE55E56 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF97FE091 EQ PUSH2 0x2AD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0xCF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x47F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x52B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x53E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCB SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCE SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x379 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x3A8 DUP2 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3C3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x440 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x46F DUP3 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x47B DUP3 DUP3 PUSH1 0x1 PUSH2 0xB34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12D8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x533 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x53C PUSH0 PUSH2 0xC9E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x56B JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x58B JUMPI POP PUSH2 0x57A ADDRESS PUSH2 0xCEF JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x617 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x61F PUSH2 0xD2C JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2F48AB7D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2F48AB7D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0xCC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B21DDEC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x698518E5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x3E8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x698518E5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x7E7 SWAP1 DUP9 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0xCC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F05CDF5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xCC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF97FE091 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST CALLER PUSH2 0x3E8 PUSH1 0xCC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x698518E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x9CF SWAP1 DUP9 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA13 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA37 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA44 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0xC9E JUMP JUMPDEST CALLER PUSH2 0xABB PUSH2 0x53E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12D8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB67 JUMPI PUSH2 0xA37 DUP4 PUSH2 0xD52 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBC1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBBE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12D8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST POP PUSH2 0xA37 DUP4 DUP4 DUP4 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x53C PUSH2 0xE15 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12D8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDF4 DUP4 PUSH2 0xE44 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0xE00 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xA37 JUMPI PUSH2 0xE0F DUP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x53C CALLER PUSH2 0xC9E JUMP JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE8E DUP4 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0xEE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xF68 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xF73 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF82 JUMPI POP DUP2 PUSH2 0xF8C JUMP JUMPDEST PUSH2 0xF8C DUP4 DUP4 PUSH2 0xF93 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xFA3 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF8C DUP2 PUSH2 0xFBD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1011 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x101C DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1037 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x104A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105C PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1084 JUMPI PUSH2 0x1084 PUSH2 0xFEC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x109C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF8C DUP2 PUSH2 0xFBD JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1171 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x11B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF8C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1262 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124A JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x127B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12A3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CHAINID PUSH22 0x6E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A2646970667358221220EB 0xB6 SWAP8 EXTCODECOPY DUP8 0xF7 0xD6 0xB9 0xEE 0xEB 0xF9 0xE3 BALANCE CALLDATALOAD 0x1F KECCAK256 0x2B 0xEA 0xCD INVALID LOG1 GASPRICE 0x4F 0x4C 0xC2 0xEC MUL 0x4D PUSH26 0x589C7D64736F6C63430008140033000000000000000000000000 ",
							"sourceMap": "732:1370:0:-:0;;;1332:4:7;1289:48;;1138:64:0;;;;;;;;;-1:-1:-1;1163:22:0;:20;:22::i;:::-;732:1370;;5928:279:6;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:6;;216:2:12;5987:66:6;;;198:21:12;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:12;;;338:37;392:19;;5987:66:6;;;;;;;;6067:12;;6082:15;6067:12;;;:30;6063:138;;;6113:12;:30;;-1:-1:-1;;6113:30:6;6128:15;6113:30;;;;;;6162:28;;564:36:12;;;6162:28:6;;552:2:12;537:18;6162:28:6;;;;;;;6063:138;5928:279::o;422:184:12:-;732:1370:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_211": {
									"entryPoint": 3326,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_222": {
									"entryPoint": 3605,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_899": {
									"entryPoint": 3372,
									"id": 899,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_62": {
									"entryPoint": 2860,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_253": {
									"entryPoint": 2738,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_functionDelegateCall_696": {
									"entryPoint": 3715,
									"id": 696,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getImplementation_392": {
									"entryPoint": 2833,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1406": {
									"entryPoint": null,
									"id": 1406,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1378": {
									"entryPoint": 3987,
									"id": 1378,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_416": {
									"entryPoint": 3410,
									"id": 416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_310": {
									"entryPoint": 3230,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_512": {
									"entryPoint": 2868,
									"id": 512,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_459": {
									"entryPoint": 3563,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_431": {
									"entryPoint": 3652,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acbConfig_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeConfig_74": {
									"entryPoint": 716,
									"id": 74,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getAddressSlot_1447": {
									"entryPoint": null,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1458": {
									"entryPoint": null,
									"id": 1458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_53": {
									"entryPoint": 1357,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_1113": {
									"entryPoint": 3311,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@monthDividendAddress_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_239": {
									"entryPoint": 1342,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@platformAddress_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@platformRate_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proxiableUUID_962": {
									"entryPoint": 1151,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingAddress_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_267": {
									"entryPoint": 1323,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapRate_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@teamRewardAddress_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_290": {
									"entryPoint": 2620,
									"id": 290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1005": {
									"entryPoint": 966,
									"id": 1005,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_984": {
									"entryPoint": 758,
									"id": 984,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@usdt_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdtswap_137": {
									"entryPoint": 1666,
									"id": 137,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResult_1358": {
									"entryPoint": 3955,
									"id": 1358,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4538,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4680,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9776:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:12"
															},
															"nodeType": "YulIf",
															"src": "69:70:12"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:12",
														"type": ""
													}
												],
												"src": "14:131:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:12"
															},
															"nodeType": "YulIf",
															"src": "230:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:12",
														"type": ""
													}
												],
												"src": "150:247:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "525:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "536:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "513:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "555:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "570:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "591:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "582:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "582:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "595:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "578:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "578:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "566:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "566:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "472:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "483:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "494:4:12",
														"type": ""
													}
												],
												"src": "402:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "711:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "721:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "733:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "744:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "729:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "721:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "763:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "774:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "756:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "680:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "691:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "702:4:12",
														"type": ""
													}
												],
												"src": "610:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "824:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "848:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "844:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "834:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "834:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "884:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "874:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "908:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "792:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1020:960:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1066:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1075:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1078:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1068:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1068:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1068:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1041:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1050:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1037:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1037:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1062:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:32:12"
															},
															"nodeType": "YulIf",
															"src": "1030:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1091:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1117:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1104:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1095:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1161:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1136:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1136:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1176:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1186:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1176:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1200:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1231:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1242:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1214:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1204:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1273:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1277:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1259:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1310:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1319:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1322:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1312:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1312:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1312:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1298:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1306:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1295:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1295:14:12"
															},
															"nodeType": "YulIf",
															"src": "1292:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1335:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:12"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1345:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1339:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1415:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1424:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1427:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1417:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1417:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1417:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1394:2:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1398:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1390:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1390:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1405:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1386:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1386:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1379:35:12"
															},
															"nodeType": "YulIf",
															"src": "1376:55:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1440:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1463:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1450:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1444:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1489:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1491:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1491:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1491:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1481:2:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1485:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1478:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1478:10:12"
															},
															"nodeType": "YulIf",
															"src": "1475:36:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1520:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1534:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1530:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1524:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1546:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1566:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1560:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1560:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1550:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1578:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1600:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1624:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1628:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1620:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1620:13:12"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1635:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1616:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1616:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1640:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1612:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1612:31:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1645:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1608:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1596:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1582:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1708:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1710:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1710:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1710:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1667:10:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1679:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1687:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1699:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1684:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1684:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1661:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:46:12"
															},
															"nodeType": "YulIf",
															"src": "1658:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1746:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1750:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1739:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1739:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1777:6:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1785:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1770:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1770:18:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1834:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1843:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1836:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1836:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1836:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1811:2:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1815:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1807:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1807:11:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1820:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1803:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1825:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1800:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:33:12"
															},
															"nodeType": "YulIf",
															"src": "1797:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1876:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1884:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1872:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1872:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1893:2:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1897:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1889:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1889:11:12"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1902:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1859:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1859:46:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1929:6:12"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1937:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1925:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1925:15:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1942:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:24:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1947:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1914:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1914:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1958:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1968:6:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "978:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "989:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1001:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1009:6:12",
														"type": ""
													}
												],
												"src": "924:1056:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2086:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2096:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2108:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2119:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2096:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2138:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2149:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2055:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2066:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2077:4:12",
														"type": ""
													}
												],
												"src": "1985:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2237:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2283:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2292:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2295:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2285:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2285:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2285:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2258:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2267:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2250:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:32:12"
															},
															"nodeType": "YulIf",
															"src": "2247:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2308:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2318:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2308:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2203:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2214:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2226:6:12",
														"type": ""
													}
												],
												"src": "2167:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2526:234:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2543:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2536:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2536:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2588:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2593:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2566:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2566:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:12"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2632:34:12",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2605:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2605:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2605:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2687:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2698:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2683:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2683:18:12"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2703:14:12",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2676:42:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2676:42:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2727:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2739:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2750:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2727:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2503:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2517:4:12",
														"type": ""
													}
												],
												"src": "2352:408:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2939:234:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2956:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2967:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2949:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3001:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2986:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2986:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3006:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2979:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2979:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2979:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3029:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3040:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3025:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3025:18:12"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3045:34:12",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3018:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3018:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3100:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3111:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:18:12"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3116:14:12",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3089:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3089:42:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3089:42:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3140:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3152:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3148:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3140:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2916:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2930:4:12",
														"type": ""
													}
												],
												"src": "2765:408:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3352:246:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3369:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3380:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3362:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3362:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3362:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3403:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3414:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3399:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3399:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:2:12",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3392:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3392:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3453:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3438:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3438:18:12"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3458:34:12",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3431:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3513:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3524:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:18:12"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3529:26:12",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:54:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3502:54:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3577:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3588:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3573:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3573:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3565:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3329:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3343:4:12",
														"type": ""
													}
												],
												"src": "3178:420:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3777:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3794:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3805:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3787:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3787:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3787:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3828:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3839:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3824:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3817:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3817:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3817:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3867:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3878:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3863:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3863:18:12"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3883:34:12",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3938:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3949:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3934:18:12"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3954:16:12",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3927:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3980:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3992:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4003:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3988:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3980:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3754:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3768:4:12",
														"type": ""
													}
												],
												"src": "3603:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4125:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4135:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4147:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4158:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4143:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4135:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4177:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4192:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4200:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4094:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4105:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4116:4:12",
														"type": ""
													}
												],
												"src": "4018:194:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4298:170:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4344:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4353:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4356:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4346:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4346:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4346:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4319:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4328:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4315:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4315:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4340:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4311:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:32:12"
															},
															"nodeType": "YulIf",
															"src": "4308:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4369:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4388:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4382:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4373:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4432:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4407:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4407:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4447:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4457:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4264:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4275:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4287:6:12",
														"type": ""
													}
												],
												"src": "4217:251:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4554:103:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4600:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4609:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4612:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4602:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4602:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4575:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4584:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4596:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4567:32:12"
															},
															"nodeType": "YulIf",
															"src": "4564:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4625:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4641:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4635:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4635:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4625:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4520:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4531:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4543:6:12",
														"type": ""
													}
												],
												"src": "4473:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:213:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4724:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4739:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4742:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4724:7:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4810:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4831:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4838:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4843:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4834:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4834:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4824:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4824:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4824:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4875:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4878:4:12",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4868:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4868:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4868:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4903:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4906:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4896:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4896:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4896:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4773:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4766:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4766:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4780:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4787:7:12"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4796:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4783:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4783:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4777:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4777:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4763:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4756:45:12"
															},
															"nodeType": "YulIf",
															"src": "4753:168:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4693:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4696:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4702:7:12",
														"type": ""
													}
												],
												"src": "4662:265:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4978:171:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5009:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5030:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5037:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5042:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5033:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5033:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5023:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5023:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5023:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5074:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5077:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5067:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5067:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5067:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5105:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5095:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5095:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5095:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4998:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:9:12"
															},
															"nodeType": "YulIf",
															"src": "4988:132:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5129:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5138:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5141:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5134:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5134:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5129:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4963:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4966:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4972:1:12",
														"type": ""
													}
												],
												"src": "4932:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5311:218:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5321:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5333:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5344:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5329:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5329:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5321:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5356:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5374:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5379:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5370:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5370:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5383:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5366:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5366:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5360:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5401:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5416:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5424:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5412:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5412:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5394:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5394:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5448:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5459:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5468:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5476:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5464:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5437:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5437:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5437:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5500:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5511:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5496:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5516:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5489:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5489:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5264:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5275:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5283:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5291:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5302:4:12",
														"type": ""
													}
												],
												"src": "5154:375:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5612:199:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5658:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5667:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5670:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5660:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5660:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5633:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5642:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5629:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5629:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5654:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5625:32:12"
															},
															"nodeType": "YulIf",
															"src": "5622:52:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5683:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5702:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5696:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5687:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5765:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5774:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5777:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5767:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5767:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5767:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5734:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5755:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5748:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5748:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5741:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5741:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5731:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5731:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5724:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:40:12"
															},
															"nodeType": "YulIf",
															"src": "5721:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5790:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5800:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5790:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5578:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5589:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5601:6:12",
														"type": ""
													}
												],
												"src": "5534:277:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5990:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6007:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6018:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6000:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6000:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6000:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6041:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6052:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6037:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6037:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6057:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6030:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6030:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6080:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6091:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6076:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6076:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6096:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6069:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6069:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6151:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6162:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6147:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6147:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6167:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6140:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6140:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6140:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6185:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6197:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6208:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6193:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6193:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6185:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5967:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5981:4:12",
														"type": ""
													}
												],
												"src": "5816:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6397:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6414:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6407:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6448:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6459:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6444:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6444:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6464:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6437:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6437:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6487:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6498:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6503:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6476:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6476:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6547:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6559:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6570:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6555:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6547:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6374:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6388:4:12",
														"type": ""
													}
												],
												"src": "6223:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6665:103:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6711:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6720:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6713:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6713:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6713:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6686:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6695:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6682:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6682:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6707:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6678:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:32:12"
															},
															"nodeType": "YulIf",
															"src": "6675:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6736:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6752:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6746:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6746:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6736:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6631:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6642:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6654:6:12",
														"type": ""
													}
												],
												"src": "6584:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6947:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6964:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6975:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6957:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6957:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7009:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6994:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7014:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6987:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7037:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7048:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7033:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7033:18:12"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7053:34:12",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7026:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7108:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7119:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7104:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7104:18:12"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7124:16:12",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7097:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7097:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7097:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7150:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7162:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7173:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7158:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7158:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7150:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6924:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6938:4:12",
														"type": ""
													}
												],
												"src": "6773:410:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7362:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7379:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7390:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7372:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7372:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7372:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7413:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7424:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7409:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7409:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7429:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7402:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7402:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7402:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7463:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7448:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7448:18:12"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7468:34:12",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7441:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7441:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7441:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7523:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7534:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7519:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7519:18:12"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7539:11:12",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7512:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:39:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7512:39:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7560:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7572:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7583:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7568:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7568:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7560:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7339:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7353:4:12",
														"type": ""
													}
												],
												"src": "7188:405:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7772:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7789:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7800:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7782:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7782:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7782:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7823:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7834:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7819:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7819:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7839:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7812:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7812:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7812:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7862:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7873:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7858:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7858:18:12"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7878:34:12",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7851:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7851:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7851:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7933:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7944:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7929:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7929:18:12"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7949:13:12",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7922:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7922:41:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7972:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7984:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7995:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7980:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7980:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7972:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7749:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7763:4:12",
														"type": ""
													}
												],
												"src": "7598:407:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8184:235:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8201:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8212:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8194:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8194:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8235:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8246:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8231:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8251:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8224:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8224:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8224:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8274:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8285:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8270:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8270:18:12"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8290:34:12",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8263:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8263:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8345:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8356:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:18:12"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8361:15:12",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8334:43:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8386:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8398:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8409:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8394:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8394:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8386:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8161:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8175:4:12",
														"type": ""
													}
												],
												"src": "8010:409:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8598:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8615:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8626:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8608:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8649:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8660:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8645:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8645:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8665:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8638:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8638:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8638:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8688:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8699:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8684:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8684:18:12"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8704:34:12",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8677:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8677:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8677:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8759:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8770:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8755:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8755:18:12"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8775:8:12",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8748:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8748:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8793:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8805:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8816:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8801:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8793:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8575:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8589:4:12",
														"type": ""
													}
												],
												"src": "8424:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8897:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8907:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8916:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8911:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8976:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9001:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9006:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8997:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8997:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9020:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9025:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9016:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9016:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9010:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9010:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8990:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8990:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8990:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8937:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8940:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8934:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8934:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8948:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8950:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8959:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8962:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8955:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8955:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8950:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8930:3:12",
																"statements": []
															},
															"src": "8926:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9059:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9064:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9055:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9055:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9073:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9048:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8875:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8880:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8885:6:12",
														"type": ""
													}
												],
												"src": "8831:250:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9223:150:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9233:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9253:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9247:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9247:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9237:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9308:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9316:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9304:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9304:17:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9323:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9328:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9269:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9269:66:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9269:66:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9344:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9355:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9360:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9351:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9351:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9344:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9199:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9204:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9215:3:12",
														"type": ""
													}
												],
												"src": "9086:287:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9499:275:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9516:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9527:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9509:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9509:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9539:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9559:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9553:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9553:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9543:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9586:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9597:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9582:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9582:18:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9602:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9575:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9575:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9575:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9657:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9665:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9653:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9653:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9674:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9685:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9670:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9670:18:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9690:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9618:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9618:79:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9618:79:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9706:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9722:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9741:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9749:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9737:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9737:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9758:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9754:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9754:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9718:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9718:45:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9765:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9714:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9714:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9706:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9468:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9479:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9490:4:12",
														"type": ""
													}
												],
												"src": "9378:396:12"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"912": [
									{
										"length": 32,
										"start": 768
									},
									{
										"length": 32,
										"start": 841
									},
									{
										"length": 32,
										"start": 976
									},
									{
										"length": 32,
										"start": 1040
									},
									{
										"length": 32,
										"start": 1163
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x210835AE EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x36E0CAC6 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x4B21DDEC EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x698518E5 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xB2CF085E EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xD0675BFD EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xDBA64F8F EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xDBE55E56 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF97FE091 EQ PUSH2 0x2AD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0xEB CALLDATASIZE PUSH1 0x4 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x139 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x148 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0xCF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x47F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x52B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x111 PUSH2 0x53E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCB SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x10BD JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCE SLOAD PUSH2 0x111 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2D4 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x379 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x3A8 DUP2 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3C3 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xB34 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x440 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x46F DUP3 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x47B DUP3 DUP3 PUSH1 0x1 PUSH2 0xB34 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12D8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x533 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x53C PUSH0 PUSH2 0xC9E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x56B JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x58B JUMPI POP PUSH2 0x57A ADDRESS PUSH2 0xCEF JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x60F JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x617 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x61F PUSH2 0xD2C JUMP JUMPDEST PUSH1 0xCC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x47B JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2F48AB7D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2F48AB7D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0xCC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B21DDEC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x698518E5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x3E8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x698518E5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7DD SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x7E7 SWAP1 DUP9 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x7F1 SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x47B JUMPI PUSH1 0xCC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8F05CDF5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xCC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF97FE091 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST CALLER PUSH2 0x3E8 PUSH1 0xCC PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x698518E5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH2 0x9CF SWAP1 DUP9 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA13 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA37 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA44 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0xC9E JUMP JUMPDEST CALLER PUSH2 0xABB PUSH2 0x53E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12D8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB67 JUMPI PUSH2 0xA37 DUP4 PUSH2 0xD52 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBC1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBBE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1161 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12D8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST POP PUSH2 0xA37 DUP4 DUP4 DUP4 PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x53C PUSH2 0xE15 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x53C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0xD5B DUP2 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12D8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xDF4 DUP4 PUSH2 0xE44 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0xE00 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xA37 JUMPI PUSH2 0xE0F DUP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH2 0x53C CALLER PUSH2 0xC9E JUMP JUMPDEST PUSH2 0xE4D DUP2 PUSH2 0xD52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE8E DUP4 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0xEE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33E JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF3B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xF68 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xF73 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF82 JUMPI POP DUP2 PUSH2 0xF8C JUMP JUMPDEST PUSH2 0xF8C DUP4 DUP4 PUSH2 0xF93 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xFA3 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF8C DUP2 PUSH2 0xFBD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1011 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x101C DUP2 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1037 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x104A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x105C JUMPI PUSH2 0x105C PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1084 JUMPI PUSH2 0x1084 PUSH2 0xFEC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x109C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF8C DUP2 PUSH2 0xFBD JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1171 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xF6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x11B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF8C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1262 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124A JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x127B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1248 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x12A3 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CHAINID PUSH22 0x6E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A2646970667358221220EB 0xB6 SWAP8 EXTCODECOPY DUP8 0xF7 0xD6 0xB9 0xEE 0xEB 0xF9 0xE3 BALANCE CALLDATALOAD 0x1F KECCAK256 0x2B 0xEA 0xCD INVALID LOG1 GASPRICE 0x4F 0x4C 0xC2 0xEC MUL 0x4D PUSH26 0x589C7D64736F6C63430008140033000000000000000000000000 ",
							"sourceMap": "732:1370:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:100;;;;;;;;;;-1:-1:-1;1517:100:0;;;;;:::i;:::-;;:::i;:::-;;801:19;;;;;;;;;;-1:-1:-1;801:19:0;;;;-1:-1:-1;;;;;801:19:0;;;;;;-1:-1:-1;;;;;566:32:12;;;548:51;;536:2;521:18;801:19:0;;;;;;;;3317:197:7;;;;;;;;;;-1:-1:-1;3317:197:7;;;;;:::i;:::-;;:::i;1014:27:0:-;;;;;;;;;;;;;;;;;;;756:25:12;;;744:2;729:18;1014:27:0;610:177:12;937:32:0;;;;;;;;;;-1:-1:-1;937:32:0;;;;-1:-1:-1;;;;;937:32:0;;;3763:222:7;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;1048:23:0:-;;;;;;;;;;;;;;;;2071:101:1;;;;;;;;;;;;;:::i;1441:85::-;;;;;;;;;;;;;:::i;864:35:0:-;;;;;;;;;;-1:-1:-1;864:35:0;;;;-1:-1:-1;;;;;864:35:0;;;1210:162;;;;;;;;;;-1:-1:-1;1210:162:0;;;;;:::i;:::-;;:::i;1630:467::-;;;;;;;;;;-1:-1:-1;1630:467:0;;;;;:::i;:::-;;:::i;906:24::-;;;;;;;;;;-1:-1:-1;906:24:0;;;;-1:-1:-1;;;;;906:24:0;;;827:30;;;;;;;;;;-1:-1:-1;827:30:0;;;;-1:-1:-1;;;;;827:30:0;;;2321:198:1;;;;;;;;;;-1:-1:-1;2321:198:1;;;;;:::i;:::-;;:::i;976:31:0:-;;;;;;;;;;-1:-1:-1;976:31:0;;;;-1:-1:-1;;;;;976:31:0;;;1517:100;1334:13:1;:11;:13::i;:::-;1587:9:0::1;:22:::0;;-1:-1:-1;;;;;;1587:22:0::1;-1:-1:-1::0;;;;;1587:22:0;;;::::1;::::0;;;::::1;::::0;;1517:100::o;3317:197:7:-;-1:-1:-1;;;;;1898:6:7;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:7;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:7;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:7;;1963:87;;;;-1:-1:-1;;;1963:87:7;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;3763:222::-;-1:-1:-1;;;;;1898:6:7;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:7;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:7;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:7;;1963:87;;;;-1:-1:-1;;;1963:87:7;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:7;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:7;;3380:2:12;2308:92:7;;;3362:21:12;3419:2;3399:18;;;3392:30;3458:34;3438:18;;;3431:62;-1:-1:-1;;;3509:18:12;;;3502:54;3573:19;;2308:92:7;3178:420:12;2308:92:7;-1:-1:-1;;;;;;;;;;;;3006:131:7;:::o;2071:101:1:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1441:85::-;1513:6;;-1:-1:-1;;;;;1513:6:1;;1441:85::o;1210:162:0:-;3268:19:6;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:6;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;-1:-1:-1;3425:12:6;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:6;;3805:2:12;3314:201:6;;;3787:21:12;3844:2;3824:18;;;3817:30;3883:34;3863:18;;;3856:62;-1:-1:-1;;;3934:18:12;;;3927:44;3988:19;;3314:201:6;3603:410:12;3314:201:6;3525:12;:16;;-1:-1:-1;;3525:16:6;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:6;;;;;3551:65;1280:16:0::1;:14;:16::i;:::-;1307:24;:22;:24::i;:::-;1343:9;:21:::0;;-1:-1:-1;;;;;;1343:21:0::1;-1:-1:-1::0;;;;;1343:21:0;::::1;;::::0;;3636:99:6;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:6;;;3710:14;;-1:-1:-1;4170:36:12;;3710:14:6;;4158:2:12;4143:18;3710:14:6;;;;;;;3258:483;1210:162:0;:::o;1630:467::-;1727:9;;1718:26;;;-1:-1:-1;;;1718:26:0;;;;1689:8;;-1:-1:-1;;;;;1727:9:0;;1718:24;;:26;;;;;;;;;;;;;;1727:9;1718:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1700:58:0;;1759:10;1780:9;;;;;;;;;-1:-1:-1;;;;;1780:9:0;-1:-1:-1;;;;;1771:37:0;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1830:9;;1821:30;;;-1:-1:-1;;;1821:30:0;;;;1854:4;;-1:-1:-1;;;;;1830:9:0;;1821:28;;:30;;;;;;;;;;;;;;1830:9;1821:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1812:39;;:6;:39;:::i;:::-;:46;;;;:::i;:::-;1700:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1689:170;;1873:3;1870:191;;;1919:9;;;;;;;;;-1:-1:-1;;;;;1919:9:0;-1:-1:-1;;;;;1910:22:0;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1892:56:0;;1959:9;;;;;;;;;-1:-1:-1;;;;;1959:9:0;-1:-1:-1;;;;;1950:36:0;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1989:10;2044:4;2020:9;;;;;;;;;-1:-1:-1;;;;;2020:9:0;-1:-1:-1;;;;;2011:28:0;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2002:39;;:6;:39;:::i;:::-;:46;;;;:::i;:::-;1892:157;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1672:425;1630:467;:::o;2321:198:1:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:1;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:1;;6018:2:12;2401:73:1::1;::::0;::::1;6000:21:12::0;6057:2;6037:18;;;6030:30;6096:34;6076:18;;;6069:62;-1:-1:-1;;;6147:18:12;;;6140:36;6193:19;;2401:73:1::1;5816:402:12::0;2401:73:1::1;2484:28;2503:8;2484:18;:28::i;1599:130::-:0;929:10:10;1662:7:1;:5;:7::i;:::-;-1:-1:-1;;;;;1662:23:1;;1654:68;;;;-1:-1:-1;;;1654:68:1;;6425:2:12;1654:68:1;;;6407:21:12;;;6444:18;;;6437:30;6503:34;6483:18;;;6476:62;6555:18;;1654:68:1;6223:356:12;1509:151:4;-1:-1:-1;;;;;;;;;;;1588:65:4;-1:-1:-1;;;;;1588:65:4;;1509:151::o;1380:116:0:-;1334:13:1;:11;:13::i;2884:974:4:-;1023:66;3330:59;;;3326:526;;;3405:37;3424:17;3405:18;:37::i;3326:526::-;3506:17;-1:-1:-1;;;;;3477:61:4;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3477:63:4;;;;;;;;-1:-1:-1;;3477:63:4;;;;;;;;;;;;:::i;:::-;;;3473:302;;3704:56;;-1:-1:-1;;;3704:56:4;;6975:2:12;3704:56:4;;;6957:21:12;7014:2;6994:18;;;6987:30;7053:34;7033:18;;;7026:62;-1:-1:-1;;;7104:18:12;;;7097:44;7158:19;;3704:56:4;6773:410:12;3473:302:4;-1:-1:-1;;;;;;;;;;;3590:28:4;;3582:82;;;;-1:-1:-1;;;3582:82:4;;7390:2:12;3582:82:4;;;7372:21:12;7429:2;7409:18;;;7402:30;7468:34;7448:18;;;7441:62;-1:-1:-1;;;7519:18:12;;;7512:39;7568:19;;3582:82:4;7188:405:12;3582:82:4;3541:138;3788:53;3806:17;3825:4;3831:9;3788:17;:53::i;2673:187:1:-;2765:6;;;-1:-1:-1;;;;;2781:17:1;;;-1:-1:-1;;;;;;2781:17:1;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1186:320:9:-;-1:-1:-1;;;;;1476:19:9;;:23;;;1186:320::o;1003:95:1:-;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;1065:26:1::1;:24;:26::i;1042:67:7:-:0;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;1751:281:4:-;1832:48;1862:17;1832:29;:48::i;:::-;1824:106;;;;-1:-1:-1;;;1824:106:4;;8212:2:12;1824:106:4;;;8194:21:12;8251:2;8231:18;;;8224:30;8290:34;8270:18;;;8263:62;-1:-1:-1;;;8341:18:12;;;8334:43;8394:19;;1824:106:4;8010:409:12;1824:106:4;-1:-1:-1;;;;;;;;;;;1940:85:4;;-1:-1:-1;;;;;;1940:85:4;-1:-1:-1;;;;;1940:85:4;;;;;;;;;;1751:281::o;2424:288::-;2562:29;2573:17;2562:10;:29::i;:::-;2619:1;2605:4;:11;:15;:28;;;;2624:9;2605:28;2601:105;;;2649:46;2671:17;2690:4;2649:21;:46::i;:::-;;2424:288;;;:::o;1104:111:1:-;5363:13:6;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:6;;;;;;;:::i;:::-;1176:32:1::1;929:10:10::0;1176:18:1::1;:32::i;2138:152:4:-:0;2204:37;2223:17;2204:18;:37::i;:::-;2256:27;;-1:-1:-1;;;;;2256:27:4;;;;;;;;2138:152;:::o;6780:455::-;6863:12;6895:37;6925:6;6895:29;:37::i;:::-;6887:88;;;;-1:-1:-1;;;6887:88:4;;8626:2:12;6887:88:4;;;8608:21:12;8665:2;8645:18;;;8638:30;8704:34;8684:18;;;8677:62;-1:-1:-1;;;8755:18:12;;;8748:36;8801:19;;6887:88:4;8424:402:12;6887:88:4;7046:12;7060:23;7087:6;-1:-1:-1;;;;;7087:19:4;7107:4;7087:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:67;;;;7129:99;7165:7;7174:10;7129:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7122:106;;;;6780:455;;;;;:::o;7438:295:9:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:9;7635:17;;7608:119;7683:33;7691:10;7703:12;7683:7;:33::i;:::-;7438:295;;;;;:::o;7739:540::-;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;7894:379;8249:12;8242:20;;-1:-1:-1;;;8242:20:9;;;;;;;;:::i;14:131:12:-;-1:-1:-1;;;;;89:31:12;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;792:127::-;853:10;848:3;844:20;841:1;834:31;884:4;881:1;874:15;908:4;905:1;898:15;924:1056;1001:6;1009;1062:2;1050:9;1041:7;1037:23;1033:32;1030:52;;;1078:1;1075;1068:12;1030:52;1117:9;1104:23;1136:31;1161:5;1136:31;:::i;:::-;1186:5;-1:-1:-1;1242:2:12;1227:18;;1214:32;-1:-1:-1;;;;;1295:14:12;;;1292:34;;;1322:1;1319;1312:12;1292:34;1360:6;1349:9;1345:22;1335:32;;1405:7;1398:4;1394:2;1390:13;1386:27;1376:55;;1427:1;1424;1417:12;1376:55;1463:2;1450:16;1485:2;1481;1478:10;1475:36;;;1491:18;;:::i;:::-;1566:2;1560:9;1534:2;1620:13;;-1:-1:-1;;1616:22:12;;;1640:2;1612:31;1608:40;1596:53;;;1664:18;;;1684:22;;;1661:46;1658:72;;;1710:18;;:::i;:::-;1750:10;1746:2;1739:22;1785:2;1777:6;1770:18;1825:7;1820:2;1815;1811;1807:11;1803:20;1800:33;1797:53;;;1846:1;1843;1836:12;1797:53;1902:2;1897;1893;1889:11;1884:2;1876:6;1872:15;1859:46;1947:1;1942:2;1937;1929:6;1925:15;1921:24;1914:35;1968:6;1958:16;;;;;;;924:1056;;;;;:::o;2167:180::-;2226:6;2279:2;2267:9;2258:7;2254:23;2250:32;2247:52;;;2295:1;2292;2285:12;2247:52;-1:-1:-1;2318:23:12;;2167:180;-1:-1:-1;2167:180:12:o;2352:408::-;2554:2;2536:21;;;2593:2;2573:18;;;2566:30;-1:-1:-1;;;;;;;;;;;2627:2:12;2612:18;;2605:62;-1:-1:-1;;;2698:2:12;2683:18;;2676:42;2750:3;2735:19;;2352:408::o;2765:::-;2967:2;2949:21;;;3006:2;2986:18;;;2979:30;-1:-1:-1;;;;;;;;;;;3040:2:12;3025:18;;3018:62;-1:-1:-1;;;3111:2:12;3096:18;;3089:42;3163:3;3148:19;;2765:408::o;4217:251::-;4287:6;4340:2;4328:9;4319:7;4315:23;4311:32;4308:52;;;4356:1;4353;4346:12;4308:52;4388:9;4382:16;4407:31;4432:5;4407:31;:::i;4473:184::-;4543:6;4596:2;4584:9;4575:7;4571:23;4567:32;4564:52;;;4612:1;4609;4602:12;4564:52;-1:-1:-1;4635:16:12;;4473:184;-1:-1:-1;4473:184:12:o;4662:265::-;4735:9;;;4766;;4783:15;;;4777:22;;4763:37;4753:168;;4843:10;4838:3;4834:20;4831:1;4824:31;4878:4;4875:1;4868:15;4906:4;4903:1;4896:15;4932:217;4972:1;4998;4988:132;;5042:10;5037:3;5033:20;5030:1;5023:31;5077:4;5074:1;5067:15;5105:4;5102:1;5095:15;4988:132;-1:-1:-1;5134:9:12;;4932:217::o;5154:375::-;-1:-1:-1;;;;;5412:15:12;;;5394:34;;5464:15;;;;5459:2;5444:18;;5437:43;5511:2;5496:18;;5489:34;;;;5344:2;5329:18;;5154:375::o;5534:277::-;5601:6;5654:2;5642:9;5633:7;5629:23;5625:32;5622:52;;;5670:1;5667;5660:12;5622:52;5702:9;5696:16;5755:5;5748:13;5741:21;5734:5;5731:32;5721:60;;5777:1;5774;5767:12;7598:407;7800:2;7782:21;;;7839:2;7819:18;;;7812:30;7878:34;7873:2;7858:18;;7851:62;-1:-1:-1;;;7944:2:12;7929:18;;7922:41;7995:3;7980:19;;7598:407::o;8831:250::-;8916:1;8926:113;8940:6;8937:1;8934:13;8926:113;;;9016:11;;;9010:18;8997:11;;;8990:39;8962:2;8955:10;8926:113;;;-1:-1:-1;;9073:1:12;9055:16;;9048:27;8831:250::o;9086:287::-;9215:3;9253:6;9247:13;9269:66;9328:6;9323:3;9316:4;9308:6;9304:17;9269:66;:::i;:::-;9351:16;;;;;9086:287;-1:-1:-1;;9086:287:12:o;9378:396::-;9527:2;9516:9;9509:21;9490:4;9559:6;9553:13;9602:6;9597:2;9586:9;9582:18;9575:34;9618:79;9690:6;9685:2;9674:9;9670:18;9665:2;9657:6;9653:15;9618:79;:::i;:::-;9758:2;9737:15;-1:-1:-1;;9733:29:12;9718:45;;;;9765:2;9714:54;;9378:396;-1:-1:-1;;9378:396:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "989600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acbConfig()": "2589",
								"changeConfig(address)": "26750",
								"initialize(address)": "infinite",
								"monthDividendAddress()": "2523",
								"owner()": "2510",
								"platformAddress()": "2611",
								"platformRate()": "2338",
								"proxiableUUID()": "infinite",
								"remainingAddress()": "2655",
								"renounceOwnership()": "infinite",
								"swapRate()": "2426",
								"teamRewardAddress()": "2391",
								"transferOwnership(address)": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"usdt()": "2325",
								"usdtswap(uint256)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1336,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1138,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1163,
									"end": 1185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1163,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1163,
									"end": 1185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1163,
									"end": 1185,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1163,
									"end": 1185,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5928,
									"end": 6207,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 5928,
									"end": 6207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 6009,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5996,
									"end": 6009,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 6009,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5996,
									"end": 6009,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 6009,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 6009,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 5996,
									"end": 6009,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5995,
									"end": 6009,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 294,
									"end": 328,
									"name": "PUSH",
									"source": 12,
									"value": "496E697469616C697A61626C653A20636F6E747261637420697320696E697469"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "616C697A696E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 338,
									"end": 375,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 392,
									"end": 411,
									"name": "PUSH",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 392,
									"end": 411,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5987,
									"end": 6053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6067,
									"end": 6079,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6067,
									"end": 6079,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6097,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 6067,
									"end": 6079,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6067,
									"end": 6079,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6067,
									"end": 6079,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6067,
									"end": 6097,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6063,
									"end": 6201,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6063,
									"end": 6201,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6063,
									"end": 6201,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6125,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6128,
									"end": 6143,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6113,
									"end": 6143,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 564,
									"end": 600,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 564,
									"end": 600,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 564,
									"end": 600,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "PUSH",
									"source": 6,
									"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 552,
									"end": 554,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6162,
									"end": 6190,
									"name": "LOG1",
									"source": 6
								},
								{
									"begin": 6063,
									"end": 6201,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6063,
									"end": 6201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5928,
									"end": 6207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 422,
									"end": 606,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 422,
									"end": 606,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "912"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 732,
									"end": 2102,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ebb6973c87f7d6b9eeebf9e331351f202beacdfea13a4f4cc2ec024d79589c7d64736f6c63430008140033",
									".code": [
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "210835AE"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "2F48AB7D"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "3659CFE6"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "36E0CAC6"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "4B21DDEC"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "4F1EF286"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "698518E5"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "B2CF085E"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "C4D66DE8"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "D0675BFD"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "DBA64F8F"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "DBE55E56"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "F97FE091"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 732,
											"end": 2102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1517,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1517,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 801,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 801,
											"end": 820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 566,
											"end": 598,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 566,
											"end": 598,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 566,
											"end": 598,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 548,
											"end": 599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 548,
											"end": 599,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 801,
											"end": 820,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 801,
											"end": 820,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "CF"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1014,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 610,
											"end": 787,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 937,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "CD"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 937,
											"end": 969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 937,
											"end": 969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "D0"
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2071,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 864,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 864,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 864,
											"end": 899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 864,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 864,
											"end": 899,
											"name": "PUSH",
											"source": 0,
											"value": "CB"
										},
										{
											"begin": 864,
											"end": 899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 864,
											"end": 899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 864,
											"end": 899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 899,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1210,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1210,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1630,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1630,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 906,
											"end": 930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 906,
											"end": 930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 906,
											"end": 930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 906,
											"end": 930,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 906,
											"end": 930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 906,
											"end": 930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 906,
											"end": 930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 906,
											"end": 930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 827,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 827,
											"end": 857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 827,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 827,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "CA"
										},
										{
											"begin": 827,
											"end": 857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 827,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 827,
											"end": 857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 827,
											"end": 857,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2321,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2321,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "PUSH",
											"source": 0,
											"value": "CE"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1517,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 1609,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1609,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "912"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "912"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3418,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3400,
											"end": 3436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3446,
											"end": 3507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3446,
											"end": 3507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "912"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "912"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3898,
											"end": 3915,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3880,
											"end": 3916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3948,
											"end": 3965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 3971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 3977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3926,
											"end": 3978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "912"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3382,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3383,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3399,
											"end": 3417,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3399,
											"end": 3417,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3399,
											"end": 3417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3422,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3458,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3431,
											"end": 3493,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3509,
											"end": 3527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3556,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3573,
											"end": 3592,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3573,
											"end": 3592,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 3178,
											"end": 3598,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2162,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2135,
											"end": 2165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3370,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3377,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3421,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3807,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3808,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3844,
											"end": 3846,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3883,
											"end": 3917,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3863,
											"end": 3881,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3856,
											"end": 3918,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3927,
											"end": 3971,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3988,
											"end": 4007,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3603,
											"end": 4013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3541,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1280,
											"end": 1294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1280,
											"end": 1296,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1280,
											"end": 1296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1307,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1307,
											"end": 1331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1307,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 1343,
											"end": 1364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1364,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1364,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1364,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1364,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4170,
											"end": 4206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4170,
											"end": 4206,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4158,
											"end": 4160,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3258,
											"end": 3741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2F48AB7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1697,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1742,
											"name": "PUSH",
											"source": 0,
											"value": "2F48AB7D"
										},
										{
											"begin": 1718,
											"end": 1742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1718,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1718,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1758,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1758,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1759,
											"end": 1769,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1808,
											"name": "PUSH",
											"source": 0,
											"value": "4B21DDEC"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1771,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1771,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "698518E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1849,
											"name": "PUSH",
											"source": 0,
											"value": "698518E5"
										},
										{
											"begin": 1821,
											"end": 1849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1821,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1821,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1812,
											"end": 1851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1812,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1851,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1812,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1812,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1812,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1700,
											"end": 1859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1700,
											"end": 1859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1700,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1873,
											"end": 1876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 2061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1870,
											"end": 2061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1910,
											"end": 1932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "8F05CDF5"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1910,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1892,
											"end": 1948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1950,
											"end": 1986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1986,
											"name": "PUSH",
											"source": 0,
											"value": "F97FE091"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1950,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 1999,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2044,
											"end": 2048,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "PUSH",
											"source": 0,
											"value": "698518E5"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2011,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2011,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2002,
											"end": 2041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2002,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2002,
											"end": 2048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2002,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2048,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2002,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1892,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1892,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 2097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 2097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6021,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6059,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 6037,
											"end": 6055,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6037,
											"end": 6055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6055,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6030,
											"end": 6060,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6096,
											"end": 6130,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6069,
											"end": 6131,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6165,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6193,
											"end": 6212,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6193,
											"end": 6212,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5816,
											"end": 6218,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2503,
											"end": 2511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2484,
											"end": 2512,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1662,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6407,
											"end": 6428,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6407,
											"end": 6428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6407,
											"end": 6428,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6437,
											"end": 6467,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6503,
											"end": 6537,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6476,
											"end": 6538,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6555,
											"end": 6573,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6555,
											"end": 6573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6223,
											"end": 6579,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1660,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1509,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1380,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1089,
											"name": "PUSH",
											"source": 4,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3405,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3523,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3538,
											"name": "PUSH",
											"source": 4,
											"value": "52D1902D"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3477,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6957,
											"end": 6978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7014,
											"end": 7016,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7087,
											"name": "PUSH",
											"source": 12,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 7033,
											"end": 7051,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7033,
											"end": 7051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7088,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E206973206E6F742055555053"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7104,
											"end": 7122,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7097,
											"end": 7141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7158,
											"end": 7177,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7158,
											"end": 7177,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6773,
											"end": 7183,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3590,
											"end": 3618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3618,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7390,
											"end": 7392,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7372,
											"end": 7393,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7429,
											"end": 7431,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7409,
											"end": 7427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7402,
											"end": 7432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7502,
											"name": "PUSH",
											"source": 12,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7441,
											"end": 7503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A58589B1955555251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7519,
											"end": 7537,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7551,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7568,
											"end": 7587,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7568,
											"end": 7587,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7188,
											"end": 7593,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3806,
											"end": 3823,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3831,
											"end": 3840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3788,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1186,
											"end": 1506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5355,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1109,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1042,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5355,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1751,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1832,
											"end": 1880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8212,
											"end": 8214,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8215,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8251,
											"end": 8253,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8254,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8290,
											"end": 8324,
											"name": "PUSH",
											"source": 12,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 8270,
											"end": 8288,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8270,
											"end": 8288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8263,
											"end": 8325,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8334,
											"end": 8377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 8010,
											"end": 8419,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1751,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2562,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2616,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2671,
											"end": 2688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 2649,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5355,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 2223,
											"end": 2240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2204,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6863,
											"end": 6875,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6895,
											"end": 6932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8626,
											"end": 8628,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8608,
											"end": 8629,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8665,
											"end": 8667,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8638,
											"end": 8668,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8704,
											"end": 8738,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
										},
										{
											"begin": 8684,
											"end": 8702,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8684,
											"end": 8702,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8684,
											"end": 8702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8677,
											"end": 8739,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8748,
											"end": 8784,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 8820,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8801,
											"end": 8820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 8424,
											"end": 8826,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7111,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7087,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7165,
											"end": 7172,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7174,
											"end": 7184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH data",
											"source": 4,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7129,
											"end": 7228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 7235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7584,
											"end": 7596,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7612,
											"end": 7619,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7642,
											"end": 7652,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7635,
											"end": 7652,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7691,
											"end": 7701,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7715,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7683,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7438,
											"end": 7733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 8279,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7739,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8126,
											"end": 8136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8120,
											"end": 8137,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8182,
											"end": 8197,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8179,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8167,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8154,
											"end": 8198,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8249,
											"end": 8261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8242,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 792,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 792,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 848,
											"end": 851,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 844,
											"end": 864,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 841,
											"end": 842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 865,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 884,
											"end": 888,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 908,
											"end": 912,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 905,
											"end": 906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 913,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1980,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 924,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1064,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1037,
											"end": 1060,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1065,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1082,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1030,
											"end": 1082,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1082,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1030,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1136,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1161,
											"end": 1166,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1136,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 1136,
											"end": 1167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1136,
											"end": 1167,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1136,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1186,
											"end": 1191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1242,
											"end": 1244,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1309,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1309,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1324,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1367,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1405,
											"end": 1412,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1402,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1394,
											"end": 1396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1390,
											"end": 1403,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1413,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1376,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1376,
											"end": 1431,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1425,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1429,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1376,
											"end": 1431,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1376,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1466,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1485,
											"end": 1487,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1481,
											"end": 1483,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1488,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1511,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1475,
											"end": 1511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1491,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1491,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1534,
											"end": 1536,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1620,
											"end": 1633,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1620,
											"end": 1633,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 1612,
											"end": 1643,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1608,
											"end": 1648,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1682,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1684,
											"end": 1706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1684,
											"end": 1706,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1684,
											"end": 1706,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1661,
											"end": 1707,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1730,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1658,
											"end": 1730,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1710,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1710,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1710,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1710,
											"end": 1728,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1710,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1750,
											"end": 1760,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1748,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1761,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1777,
											"end": 1783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1825,
											"end": 1832,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1813,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1807,
											"end": 1818,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1823,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1833,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1836,
											"end": 1848,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1902,
											"end": 1904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1895,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 1900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1882,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1859,
											"end": 1905,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1944,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1937,
											"end": 1939,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1980,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1980,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1980,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2347,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2167,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2276,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2258,
											"end": 2265,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2254,
											"end": 2277,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2282,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2299,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 2247,
											"end": 2299,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2295,
											"end": 2296,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2285,
											"end": 2297,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2299,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 2247,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2318,
											"end": 2341,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2318,
											"end": 2341,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2167,
											"end": 2347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2352,
											"end": 2760,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2352,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2554,
											"end": 2556,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2595,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2718,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2352,
											"end": 2760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 3173,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2765,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2967,
											"end": 2969,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 2970,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2970,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3006,
											"end": 3008,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 2986,
											"end": 3004,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2986,
											"end": 3004,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2986,
											"end": 3004,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 3009,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3040,
											"end": 3042,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3018,
											"end": 3080,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6163746976652070726F7879"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3131,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3163,
											"end": 3166,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2765,
											"end": 3173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4468,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 4217,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4342,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4337,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4319,
											"end": 4326,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4315,
											"end": 4338,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4356,
											"end": 4357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4346,
											"end": 4358,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 4308,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4388,
											"end": 4397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4407,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 4432,
											"end": 4437,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4407,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 4407,
											"end": 4438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4473,
											"end": 4657,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 4473,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4543,
											"end": 4549,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4598,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4575,
											"end": 4582,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4594,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4567,
											"end": 4599,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4564,
											"end": 4616,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4564,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4564,
											"end": 4616,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4602,
											"end": 4614,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4564,
											"end": 4616,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4564,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4473,
											"end": 4657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4473,
											"end": 4657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4662,
											"end": 4927,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 4662,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4777,
											"end": 4799,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4777,
											"end": 4799,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4763,
											"end": 4800,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4753,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 4753,
											"end": 4921,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4843,
											"end": 4853,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4834,
											"end": 4854,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4878,
											"end": 4882,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 4875,
											"end": 4876,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4868,
											"end": 4883,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4910,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4903,
											"end": 4904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4911,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4932,
											"end": 5149,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 4932,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4972,
											"end": 4973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 4999,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4988,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4988,
											"end": 5120,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5042,
											"end": 5052,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5033,
											"end": 5053,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5054,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5081,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5067,
											"end": 5082,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5105,
											"end": 5109,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5102,
											"end": 5103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5110,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4988,
											"end": 5120,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4988,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4932,
											"end": 5149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5529,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 5154,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5427,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5412,
											"end": 5427,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5412,
											"end": 5427,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5394,
											"end": 5428,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5394,
											"end": 5428,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5479,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5479,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5511,
											"end": 5513,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5523,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5523,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5489,
											"end": 5523,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5811,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5534,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5656,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5633,
											"end": 5640,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5629,
											"end": 5652,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5625,
											"end": 5657,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5670,
											"end": 5671,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5672,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5622,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5702,
											"end": 5711,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5696,
											"end": 5712,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5755,
											"end": 5760,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5748,
											"end": 5761,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5741,
											"end": 5762,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5763,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 5721,
											"end": 5781,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5777,
											"end": 5778,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5767,
											"end": 5779,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7598,
											"end": 8005,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7598,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7800,
											"end": 7802,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7782,
											"end": 7803,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7782,
											"end": 7803,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7782,
											"end": 7803,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7839,
											"end": 7841,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7878,
											"end": 7912,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7858,
											"end": 7876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7858,
											"end": 7876,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7851,
											"end": 7913,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7944,
											"end": 7946,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7963,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7995,
											"end": 7998,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7980,
											"end": 7999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7980,
											"end": 7999,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7598,
											"end": 8005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8831,
											"end": 9081,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 8831,
											"end": 9081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8934,
											"end": 8947,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9027,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9027,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8997,
											"end": 9008,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8997,
											"end": 9008,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8997,
											"end": 9008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8990,
											"end": 9029,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8962,
											"end": 8964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8955,
											"end": 8965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8926,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9073,
											"end": 9074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9048,
											"end": 9075,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8831,
											"end": 9081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9086,
											"end": 9373,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9086,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9260,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9269,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 9328,
											"end": 9334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9323,
											"end": 9326,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9316,
											"end": 9320,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9308,
											"end": 9314,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9269,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 9269,
											"end": 9335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9269,
											"end": 9335,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 9269,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9351,
											"end": 9367,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9351,
											"end": 9367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9351,
											"end": 9367,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9351,
											"end": 9367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9351,
											"end": 9367,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9086,
											"end": 9373,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9086,
											"end": 9373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9378,
											"end": 9774,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 9378,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9527,
											"end": 9529,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9516,
											"end": 9525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9509,
											"end": 9530,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9490,
											"end": 9494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9559,
											"end": 9565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9553,
											"end": 9566,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9602,
											"end": 9608,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9597,
											"end": 9599,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9582,
											"end": 9600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9575,
											"end": 9609,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 9690,
											"end": 9696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9674,
											"end": 9683,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9670,
											"end": 9688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9665,
											"end": 9667,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9657,
											"end": 9663,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9653,
											"end": 9668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 9618,
											"end": 9697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9618,
											"end": 9697,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 9618,
											"end": 9697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9758,
											"end": 9760,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9737,
											"end": 9752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9733,
											"end": 9762,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9763,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9763,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9765,
											"end": 9767,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9714,
											"end": 9768,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9768,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9378,
											"end": 9774,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9378,
											"end": 9774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									],
									".data": {
										"662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"contracts/MVEX.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acbConfig()": "dba64f8f",
							"changeConfig(address)": "210835ae",
							"initialize(address)": "c4d66de8",
							"monthDividendAddress()": "b2cf085e",
							"owner()": "8da5cb5b",
							"platformAddress()": "dbe55e56",
							"platformRate()": "36e0cac6",
							"proxiableUUID()": "52d1902d",
							"remainingAddress()": "f97fe091",
							"renounceOwnership()": "715018a6",
							"swapRate()": "698518e5",
							"teamRewardAddress()": "4b21ddec",
							"transferOwnership(address)": "f2fde38b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"usdt()": "2f48ab7d",
							"usdtswap(uint256)": "d0675bfd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acbConfig\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_acbConfig\",\"type\":\"address\"}],\"name\":\"changeConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_acbConfig\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthDividendAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"usdtswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MVEX.sol\":\"MVEXContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/MVEX.sol\":{\"keccak256\":\"0xa0f5543c1797dc3875b19f144c87a7d3068a9d0a2b66e3c4d15c0bc5caa6c7cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90305e396f0c3b0dd76dd9c67acd71daecc5f0510ccb5c05d3b2a281bb281a0a\",\"dweb:/ipfs/QmPUxFsD7d7zg7W2HfHWFabgoZ3coDGLRVaBwq6aCz8z2G\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 719,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 722,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1420,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 195,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 315,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 701,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1016,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 13,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "usdt",
								"offset": 0,
								"slot": "201",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "platformAddress",
								"offset": 0,
								"slot": "202",
								"type": "t_address"
							},
							{
								"astId": 17,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "monthDividendAddress",
								"offset": 0,
								"slot": "203",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "acbConfig",
								"offset": 0,
								"slot": "204",
								"type": "t_address"
							},
							{
								"astId": 21,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "teamRewardAddress",
								"offset": 0,
								"slot": "205",
								"type": "t_address"
							},
							{
								"astId": 23,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "remainingAddress",
								"offset": 0,
								"slot": "206",
								"type": "t_address"
							},
							{
								"astId": 25,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "platformRate",
								"offset": 0,
								"slot": "207",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "contracts/MVEX.sol:MVEXContract",
								"label": "swapRate",
								"offset": 0,
								"slot": "208",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 719,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 722,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1420,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 195,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 315,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.9._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.9._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "delegatecall",
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 719,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 722,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 701,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 719,
								"contract": "lib/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 722,
								"contract": "lib/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 719,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 722,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 701,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1016,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xEA DUP13 DUP7 PUSH7 0xB4FB22943A9B0A SWAP10 PUSH8 0x48D875887FE1FACD 0x27 MSIZE 0xF7 0xA8 EQ PUSH19 0xB0DFD71D64736F6C6343000814003300000000 ",
							"sourceMap": "194:8087:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xEA DUP13 DUP7 PUSH7 0xB4FB22943A9B0A SWAP10 PUSH8 0x48D875887FE1FACD 0x27 MSIZE 0xF7 0xA8 EQ PUSH19 0xB0DFD71D64736F6C6343000814003300000000 ",
							"sourceMap": "194:8087:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
									".code": [
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"contracts/MVEX.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 719,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 722,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1420,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1279:2681  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1279:2681  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xAB SLOAD SWAP4 PUSH28 0x85FB5D5C54470BB8DFBEAA303CB1C6CF43F66CDE97F9E2F76A5C3D64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "1279:1402:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1279:1402:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xAB SLOAD SWAP4 PUSH28 0x85FB5D5C54470BB8DFBEAA303CB1C6CF43F66CDE97F9E2F76A5C3D64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "1279:1402:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
									".code": [
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/MVEX.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MVEX.sol": {
				"ast": {
					"absolutePath": "contracts/MVEX.sol",
					"exportedSymbols": {
						"ACCONFIG": [
							184
						],
						"IERC20Upgradeable": [
							1095
						],
						"MVEXContract": [
							138
						],
						"OwnableUpgradeable": [
							316
						],
						"UUPSUpgradeable": [
							1017
						]
					},
					"id": 185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:0"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 1096,
							"src": "436:97:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1095,
										"src": "444:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "../lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 1018,
							"src": "536:93:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1017,
										"src": "544:15:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "../lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 185,
							"sourceUnit": 317,
							"src": "631:94:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "OwnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 316,
										"src": "639:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 8,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"758:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "758:18:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "758:18:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"778:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1017,
										"src": "778:15:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "778:15:0"
								}
							],
							"canonicalName": "MVEXContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138,
								1017,
								702,
								337,
								347,
								316,
								1421,
								881
							],
							"name": "MVEXContract",
							"nameLocation": "741:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 13,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "816:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "801:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "801:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dbe55e56",
									"id": 15,
									"mutability": "mutable",
									"name": "platformAddress",
									"nameLocation": "842:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "827:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "827:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2cf085e",
									"id": 17,
									"mutability": "mutable",
									"name": "monthDividendAddress",
									"nameLocation": "879:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "864:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "864:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dba64f8f",
									"id": 19,
									"mutability": "mutable",
									"name": "acbConfig",
									"nameLocation": "921:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "906:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "906:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b21ddec",
									"id": 21,
									"mutability": "mutable",
									"name": "teamRewardAddress",
									"nameLocation": "952:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "937:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 20,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "937:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f97fe091",
									"id": 23,
									"mutability": "mutable",
									"name": "remainingAddress",
									"nameLocation": "991:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "976:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "976:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36e0cac6",
									"id": 25,
									"mutability": "mutable",
									"name": "platformRate",
									"nameLocation": "1029:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "1014:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1014:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "698518e5",
									"id": 27,
									"mutability": "mutable",
									"name": "swapRate",
									"nameLocation": "1063:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 138,
									"src": "1048:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1048:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "1152:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 31,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "1163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "1163:22:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1084:48:0",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1152:0:0"
									},
									"scope": 138,
									"src": "1138:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1269:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 42,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1280:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1280:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "1280:16:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 45,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "1307:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1307:24:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "acbConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1343:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "_acbConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1354:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1343:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1343:21:0"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 40,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 39,
												"name": "initializer",
												"nameLocations": [
													"1250:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 783,
												"src": "1250:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1250:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "1219:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_acbConfig",
												"nameLocation": "1238:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1230:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:20:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:0:0"
									},
									"scope": 138,
									"src": "1210:162:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1011
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1494:2:0",
										"statements": []
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1461:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "1461:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1461:9:0"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "1389:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 59,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1480:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1415:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1407:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:27:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:0"
									},
									"scope": 138,
									"src": "1380:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1576:41:0",
										"statements": [
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 69,
														"name": "acbConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1587:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 70,
														"name": "_acbConfig",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1599:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1587:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1587:22:0"
											}
										]
									},
									"functionSelector": "210835ae",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 67,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 66,
												"name": "onlyOwner",
												"nameLocations": [
													"1567:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "1567:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1567:9:0"
										}
									],
									"name": "changeConfig",
									"nameLocation": "1526:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_acbConfig",
												"nameLocation": "1547:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1539:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:20:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:0:0"
									},
									"scope": 138,
									"src": "1517:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "1672:425:0",
										"statements": [
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "res",
														"nameLocation": "1694:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 136,
														"src": "1689:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 79,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1689:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 89,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1763:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1759:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 92,
																			"name": "acbConfig",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "1780:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 91,
																		"name": "ACCONFIG",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "1771:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ACCONFIG_$184_$",
																			"typeString": "type(contract ACCONFIG)"
																		}
																	},
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1771:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ACCONFIG_$184",
																		"typeString": "contract ACCONFIG"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1791:17:0",
																"memberName": "teamRewardAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 163,
																"src": "1771:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1771:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "1812:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 98,
																					"name": "acbConfig",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 19,
																					"src": "1830:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 97,
																				"name": "ACCONFIG",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "1821:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ACCONFIG_$184_$",
																					"typeString": "type(contract ACCONFIG)"
																				}
																			},
																			"id": 99,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1821:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ACCONFIG_$184",
																				"typeString": "contract ACCONFIG"
																			}
																		},
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1841:8:0",
																		"memberName": "swapRate",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 158,
																		"src": "1821:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1821:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1812:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1854:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "1812:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 83,
																					"name": "acbConfig",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 19,
																					"src": "1727:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 82,
																				"name": "ACCONFIG",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "1718:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ACCONFIG_$184_$",
																					"typeString": "type(contract ACCONFIG)"
																				}
																			},
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1718:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ACCONFIG_$184",
																				"typeString": "contract ACCONFIG"
																			}
																		},
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1738:4:0",
																		"memberName": "usdt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 143,
																		"src": "1718:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1718:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 81,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "1700:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1095_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1700:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1095",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1746:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1094,
														"src": "1700:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1700:159:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1689:170:0"
											},
											{
												"condition": {
													"id": 107,
													"name": "res",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "1873:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 135,
												"nodeType": "IfStatement",
												"src": "1870:191:0",
												"trueBody": {
													"id": 134,
													"nodeType": "Block",
													"src": "1877:184:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 117,
																						"name": "acbConfig",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 19,
																						"src": "1959:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 116,
																					"name": "ACCONFIG",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 184,
																					"src": "1950:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ACCONFIG_$184_$",
																						"typeString": "type(contract ACCONFIG)"
																					}
																				},
																				"id": 118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1950:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ACCONFIG_$184",
																					"typeString": "contract ACCONFIG"
																				}
																			},
																			"id": 119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1970:16:0",
																			"memberName": "remainingAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 168,
																			"src": "1950:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1950:38:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 121,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1989:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1993:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1989:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 123,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 76,
																				"src": "2002:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"arguments": [
																							{
																								"id": 125,
																								"name": "acbConfig",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 19,
																								"src": "2020:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 124,
																							"name": "ACCONFIG",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 184,
																							"src": "2011:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_ACCONFIG_$184_$",
																								"typeString": "type(contract ACCONFIG)"
																							}
																						},
																						"id": 126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2011:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ACCONFIG_$184",
																							"typeString": "contract ACCONFIG"
																						}
																					},
																					"id": 127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2031:8:0",
																					"memberName": "swapRate",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 158,
																					"src": "2011:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2011:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2002:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2044:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "2002:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"arguments": [
																							{
																								"id": 110,
																								"name": "acbConfig",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 19,
																								"src": "1919:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 109,
																							"name": "ACCONFIG",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 184,
																							"src": "1910:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_ACCONFIG_$184_$",
																								"typeString": "type(contract ACCONFIG)"
																							}
																						},
																						"id": 111,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1910:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ACCONFIG_$184",
																							"typeString": "contract ACCONFIG"
																						}
																					},
																					"id": 112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1930:2:0",
																					"memberName": "mv",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 153,
																					"src": "1910:22:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																						"typeString": "function () view external returns (address)"
																					}
																				},
																				"id": 113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1910:24:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 108,
																			"name": "IERC20Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "1892:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1095_$",
																				"typeString": "type(contract IERC20Upgradeable)"
																			}
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1892:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$1095",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1936:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1094,
																	"src": "1892:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1892:157:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 133,
															"nodeType": "ExpressionStatement",
															"src": "1892:157:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d0675bfd",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "usdtswap",
									"nameLocation": "1639:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1656:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "1648:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:16:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1672:0:0"
									},
									"scope": 138,
									"src": "1630:467:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 185,
							"src": "732:1370:0",
							"usedErrors": [],
							"usedEvents": [
								201,
								324,
								331,
								336,
								727
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ACCONFIG",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "ACCONFIG",
							"nameLocation": "2120:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2f48ab7d",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "usdt",
									"nameLocation": "2145:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2149:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "2174:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2173:9:0"
									},
									"scope": 184,
									"src": "2136:47:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dbe55e56",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "platformAddress",
									"nameLocation": "2198:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2213:2:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2238:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:9:0"
									},
									"scope": 184,
									"src": "2189:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f05cdf5",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mv",
									"nameLocation": "2262:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2264:2:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2289:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2288:9:0"
									},
									"scope": 184,
									"src": "2253:45:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "698518e5",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapRate",
									"nameLocation": "2313:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "2346:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:10:0"
									},
									"scope": 184,
									"src": "2304:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b21ddec",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "teamRewardAddress",
									"nameLocation": "2371:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:2:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2413:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:10:0"
									},
									"scope": 184,
									"src": "2362:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f97fe091",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remainingAddress",
									"nameLocation": "2438:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:2:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:10:0"
									},
									"scope": 184,
									"src": "2429:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e9d610e5",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mvCollectionAddress",
									"nameLocation": "2504:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2523:2:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2548:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2547:10:0"
									},
									"scope": 184,
									"src": "2495:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e56cfab",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "techAddress",
									"nameLocation": "2573:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2584:2:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2609:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:10:0"
									},
									"scope": 184,
									"src": "2564:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95623641",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketAddress",
									"nameLocation": "2634:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2647:2:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2672:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:10:0"
									},
									"scope": 184,
									"src": "2625:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 185,
							"src": "2110:588:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "83:2615:0"
				},
				"id": 0
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1379
						],
						"ContextUpgradeable": [
							1421
						],
						"Initializable": [
							881
						],
						"OwnableUpgradeable": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 1422,
							"src": "127:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 882,
							"src": "169:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 190,
										"name": "Initializable",
										"nameLocations": [
											"748:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 881,
										"src": "748:13:1"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:1"
								},
								{
									"baseName": {
										"id": 192,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "763:18:1"
									},
									"id": 193,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:1"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 189,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316,
								1421,
								881
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 195,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "788:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 194,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 201,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "844:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "875:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:1"
									},
									"src": "817:84:1"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1055:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 207,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1065:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:1"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 204,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 826,
												"src": "1038:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:1"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:1"
									},
									"scope": 316,
									"src": "1003:95:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1166:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 217,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1195:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 216,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "1176:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:1"
											}
										]
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 214,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 213,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 826,
												"src": "1149:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:1"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:1"
									},
									"scope": 316,
									"src": "1104:111:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1324:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "1334:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:1"
											},
											{
												"id": 228,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 230,
									"name": "onlyOwner",
									"nameLocation": "1312:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:1"
									},
									"src": "1303:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1496:30:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 195,
													"src": "1513:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "1506:13:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1487:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:1"
									},
									"scope": 316,
									"src": "1441:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1644:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 244,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "1662:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 246,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "1673:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:1"
									},
									"scope": 316,
									"src": "1599:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2125:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 260,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 259,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "2135:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 257,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 256,
												"name": "onlyOwner",
												"nameLocations": [
													"2115:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "2115:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:1"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:1"
									},
									"scope": 316,
									"src": "2071:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2391:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 276,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "2409:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 277,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "2503:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 285,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "2484:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:1"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 273,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 272,
												"name": "onlyOwner",
												"nameLocations": [
													"2381:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "2381:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2348:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:1"
									},
									"scope": 316,
									"src": "2321:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2736:124:1",
										"statements": [
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "2746:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 296,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"id": 298,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 195,
													"src": "2765:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:1"
											},
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2781:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 301,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2790:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 305,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "2834:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "2844:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 304,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "2813:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "EmitStatement",
												"src": "2808:45:1"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2701:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:1"
									},
									"scope": 316,
									"src": "2673:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:1",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 315,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "3125:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 312,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 314,
										"length": {
											"hexValue": "3439",
											"id": 313,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 317,
							"src": "708:2445:1",
							"usedErrors": [],
							"usedEvents": [
								201,
								727
							]
						}
					],
					"src": "102:3052:1"
				},
				"id": 1
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							337
						]
					},
					"id": 338,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "132:131:2",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.9._"
							},
							"fullyImplemented": true,
							"id": 337,
							"linearizedBaseContracts": [
								337
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "274:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "300:68:2",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 324,
									"name": "Upgraded",
									"nameLocation": "379:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "404:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "388:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:32:2"
									},
									"src": "373:47:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "426:67:2",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 331,
									"name": "AdminChanged",
									"nameLocation": "504:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "525:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "517:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "548:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "540:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:41:2"
									},
									"src": "498:60:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "564:59:2",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 336,
									"name": "BeaconUpgraded",
									"nameLocation": "634:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "665:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "649:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:24:2"
									},
									"src": "628:45:2"
								}
							],
							"scope": 338,
							"src": "264:411:2",
							"usedErrors": [],
							"usedEvents": [
								324,
								331,
								336
							]
						}
					],
					"src": "107:569:2"
				},
				"id": 2
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							347
						]
					},
					"id": 348,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 339,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 340,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:3",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 347,
							"linearizedBaseContracts": [
								347
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "352:28:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "387:438:3",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "839:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:3"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:3"
									},
									"scope": 347,
									"src": "830:57:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 348,
							"src": "342:547:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:777:3"
				},
				"id": 3
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1379
						],
						"ERC1967UpgradeUpgradeable": [
							702
						],
						"IBeaconUpgradeable": [
							712
						],
						"IERC1822ProxiableUpgradeable": [
							347
						],
						"IERC1967Upgradeable": [
							337
						],
						"Initializable": [
							881
						],
						"StorageSlotUpgradeable": [
							1481
						]
					},
					"id": 703,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 349,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 350,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 703,
							"sourceUnit": 713,
							"src": "141:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 351,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 703,
							"sourceUnit": 338,
							"src": "184:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 352,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 703,
							"sourceUnit": 348,
							"src": "235:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 703,
							"sourceUnit": 1380,
							"src": "292:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 703,
							"sourceUnit": 1482,
							"src": "337:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 703,
							"sourceUnit": 882,
							"src": "386:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 357,
										"name": "Initializable",
										"nameLocations": [
											"708:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 881,
										"src": "708:13:4"
									},
									"id": 358,
									"nodeType": "InheritanceSpecifier",
									"src": "708:13:4"
								},
								{
									"baseName": {
										"id": 359,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"723:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 337,
										"src": "723:19:4"
									},
									"id": 360,
									"nodeType": "InheritanceSpecifier",
									"src": "723:19:4"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "424:236:4",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"
							},
							"fullyImplemented": true,
							"id": 702,
							"linearizedBaseContracts": [
								702,
								337,
								881
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "679:25:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "808:7:4",
										"statements": []
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "onlyInitializing",
												"nameLocations": [
													"791:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 826,
												"src": "791:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "791:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "758:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:4"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:4"
									},
									"scope": 702,
									"src": "749:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "890:7:4",
										"statements": []
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 368,
												"name": "onlyInitializing",
												"nameLocations": [
													"873:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 826,
												"src": "873:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "873:16:4"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "830:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "861:2:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:0:4"
									},
									"scope": 702,
									"src": "821:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 375,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "1006:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 702,
									"src": "981:108:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 373,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1023:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1096:214:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 379,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1341:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 702,
									"src": "1315:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 377,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1315:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1364:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1571:89:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 387,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "1626:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 385,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "1588:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1481_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1611:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1447,
															"src": "1588:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1427_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1588:59:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1427_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1648:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1426,
													"src": "1588:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 384,
												"id": 390,
												"nodeType": "Return",
												"src": "1581:72:4"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "1437:67:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1518:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1536:2:4"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1562:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1561:9:4"
									},
									"scope": 702,
									"src": "1509:151:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "1814:218:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 401,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "1862:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 399,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "1832:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1379_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1851:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1113,
																"src": "1832:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1832:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1824:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1824:106:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "1824:106:4"
											},
											{
												"expression": {
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 409,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "1978:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 406,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "1940:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1481_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1963:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1447,
																"src": "1940:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1427_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1940:59:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1427_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2000:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1426,
														"src": "1940:65:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 412,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "2008:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1940:85:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "1940:85:4"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1666:80:4",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1760:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1787:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "1779:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:27:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:0:4"
									},
									"scope": 702,
									"src": "1751:281:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2194:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "2223:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2204:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2204:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 427,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "2265:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 426,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "2256:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2256:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "EmitStatement",
												"src": "2251:32:4"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2038:95:4",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2147:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2166:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2158:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:27:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:0:4"
									},
									"scope": 702,
									"src": "2138:152:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2552:160:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "2573:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 441,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "2562:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2562:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 445,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "2605:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2610:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2605:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2619:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2605:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 449,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "2624:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2605:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "2601:105:4",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "2635:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "2671:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 453,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "2690:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_functionDelegateCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "2649:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2649:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "2649:46:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2296:123:4",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2433:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2468:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2460:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2508:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2495:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2527:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2522:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2522:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:92:4"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2552:0:4"
									},
									"scope": 702,
									"src": "2424:288:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "3016:842:4",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 471,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "3368:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 469,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "3330:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1481_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3353:14:4",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1458,
															"src": "3330:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1430_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3330:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1430_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3384:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1429,
													"src": "3330:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 509,
													"nodeType": "Block",
													"src": "3459:393:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 494,
																		"nodeType": "Block",
																		"src": "3564:115:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 490,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 488,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 485,
																								"src": "3590:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 489,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 379,
																								"src": "3598:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3590:28:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 491,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3620:43:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 487,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3582:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 492,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3582:82:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 493,
																				"nodeType": "ExpressionStatement",
																				"src": "3582:82:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 495,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 486,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 485,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3558:4:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 495,
																				"src": "3550:12:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 484,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3550:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3549:14:4"
																	},
																	"src": "3541:138:4"
																},
																{
																	"block": {
																		"id": 500,
																		"nodeType": "Block",
																		"src": "3686:89:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 497,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3711:48:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 496,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3704:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 498,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3704:56:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 499,
																				"nodeType": "ExpressionStatement",
																				"src": "3704:56:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 501,
																	"nodeType": "TryCatchClause",
																	"src": "3680:95:4"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 480,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "3506:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 479,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "3477:28:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$347_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3477:47:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$347",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3525:13:4",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "3477:61:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3477:63:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 502,
															"nodeType": "TryStatement",
															"src": "3473:302:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "3806:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 505,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "3825:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 506,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "3831:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 503,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "3788:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3788:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 508,
															"nodeType": "ExpressionStatement",
															"src": "3788:53:4"
														}
													]
												},
												"id": 510,
												"nodeType": "IfStatement",
												"src": "3326:526:4",
												"trueBody": {
													"id": 478,
													"nodeType": "Block",
													"src": "3391:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 475,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "3424:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 474,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "3405:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3405:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 477,
															"nodeType": "ExpressionStatement",
															"src": "3405:37:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2718:161:4",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2893:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2932:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2924:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2972:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2959:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2959:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2991:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2986:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2914:92:4"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:0:4"
									},
									"scope": 702,
									"src": "2884:974:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "3864:189:4",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 516,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4084:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 702,
									"src": "4058:106:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 514,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4058:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 515,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4098:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "4279:80:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 524,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "4334:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 522,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "4296:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1481_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4319:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1447,
															"src": "4296:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1427_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4296:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1427_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4347:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1426,
													"src": "4296:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 521,
												"id": 527,
												"nodeType": "Return",
												"src": "4289:63:4"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4171:50:4",
										"text": " @dev Returns the current admin."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4235:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4244:2:4"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "4270:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4269:9:4"
									},
									"scope": 702,
									"src": "4226:133:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4486:167:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 536,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4504:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4524:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4516:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 537,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4516:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4516:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4504:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4528:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4496:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4496:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "4496:73:4"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 548,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "4617:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 545,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "4579:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1481_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4602:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1447,
																"src": "4579:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1427_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4579:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1427_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4630:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1426,
														"src": "4579:56:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "4638:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4579:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "4579:67:4"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "4365:71:4",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4450:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4468:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4460:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4459:18:4"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4486:0:4"
									},
									"scope": 702,
									"src": "4441:212:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "4813:86:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 562,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4841:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4841:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4854:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 561,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "4828:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "EmitStatement",
												"src": "4823:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 568,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4883:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 567,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "4873:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "4873:19:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4659:100:4",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4773:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4794:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4786:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4786:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4785:18:4"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4813:0:4"
									},
									"scope": 702,
									"src": "4764:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "4905:232:4",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 576,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5168:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 702,
									"src": "5142:107:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 574,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5142:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5183:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "5366:81:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 584,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "5421:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 582,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "5383:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1481_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5406:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1447,
															"src": "5383:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1427_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5383:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1427_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5435:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1426,
													"src": "5383:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 581,
												"id": 587,
												"nodeType": "Return",
												"src": "5376:64:4"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "5256:51:4",
										"text": " @dev Returns the current beacon."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5321:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5331:2:4"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "5357:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5357:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:9:4"
									},
									"scope": 702,
									"src": "5312:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "5576:368:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 598,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "5624:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 596,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "5594:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1379_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5613:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1113,
																"src": "5594:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5594:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5636:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5586:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "5586:90:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 607,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 592,
																					"src": "5756:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 606,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 712,
																				"src": "5737:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$712_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$712",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5767:14:4",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 711,
																		"src": "5737:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5737:46:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 604,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "5707:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1379_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5726:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1113,
																"src": "5707:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5707:77:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5798:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5686:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5686:172:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "5686:172:4"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 618,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "5906:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 615,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "5868:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1481_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5891:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1447,
																"src": "5868:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1427_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5868:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1427_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5920:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1426,
														"src": "5868:57:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 621,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "5928:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5868:69:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "5868:69:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "5453:71:4",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5538:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5557:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "5549:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5549:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5548:19:4"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5576:0:4"
									},
									"scope": 702,
									"src": "5529:415:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "6373:221:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 636,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6394:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 635,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "6383:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6383:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "6383:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 640,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6434:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "6419:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "EmitStatement",
												"src": "6414:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 643,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "6458:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6463:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6458:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6472:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6458:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 647,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "6477:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6458:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "6454:134:4",
												"trueBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "6488:100:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 651,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "6543:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 650,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "6524:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$712_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6524:29:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$712",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6554:14:4",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 711,
																			"src": "6524:44:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6524:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "6572:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 649,
																	"name": "_functionDelegateCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "6502:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6502:75:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 657,
															"nodeType": "ExpressionStatement",
															"src": "6502:75:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "5950:292:4",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6256:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6297:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6289:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6329:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6316:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6316:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6348:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6343:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 631,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6343:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6279:84:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6373:0:4"
									},
									"scope": 702,
									"src": "6247:347:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "6877:358:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 674,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "6925:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 672,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "6895:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1379_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6914:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1113,
																"src": "6895:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6895:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6934:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6887:88:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "6887:88:4"
											},
											{
												"assignments": [
													680,
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7051:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "7046:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 679,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7046:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7073:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "7060:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 681,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7060:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"initialValue": {
													"arguments": [
														{
															"id": 685,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "7107:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 683,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "7087:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7094:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7087:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7045:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "7165:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 691,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "7174:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7186:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"expression": {
															"id": 688,
															"name": "AddressUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "7129:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1379_$",
																"typeString": "type(library AddressUpgradeable)"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7148:16:4",
														"memberName": "verifyCallResult",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1358,
														"src": "7129:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7129:99:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 670,
												"id": 694,
												"nodeType": "Return",
												"src": "7122:106:4"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "6600:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionDelegateCall",
									"nameLocation": "6789:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6819:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6811:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6811:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6840:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6827:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6827:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6810:35:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6863:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6863:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6862:14:4"
									},
									"scope": 702,
									"src": "6780:455:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7241:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 701,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "7520:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 702,
									"src": "7500:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 698,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7500:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 700,
										"length": {
											"hexValue": "3530",
											"id": 699,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7508:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "7500:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 703,
							"src": "661:6867:4",
							"usedErrors": [],
							"usedEvents": [
								324,
								331,
								336,
								727
							]
						}
					],
					"src": "116:7413:4"
				},
				"id": 4
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							712
						]
					},
					"id": 713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 704,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 705,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 712,
							"linearizedBaseContracts": [
								712
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "208:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "233:162:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "409:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:5"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:5"
									},
									"scope": 712,
									"src": "400:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 713,
							"src": "198:262:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "93:368:5"
				},
				"id": 5
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1379
						],
						"Initializable": [
							881
						]
					},
					"id": 882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 714,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 882,
							"sourceUnit": 1380,
							"src": "138:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 716,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:6",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 881,
							"linearizedBaseContracts": [
								881
							],
							"name": "Initializable",
							"nameLocation": "2401:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:6",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 719,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "2535:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 718,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:6",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 722,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "2664:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 721,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:6",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 727,
									"name": "Initialized",
									"nameLocation": "2798:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "2810:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 724,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:6"
									},
									"src": "2792:33:6"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "3258:483:6",
										"statements": [
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3273:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "3268:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 730,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3268:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3290:14:6",
													"subExpression": {
														"id": 732,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "3291:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 736,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 731,
																			"src": "3336:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 737,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "3354:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3369:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3354:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3336:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 741,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3335:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3376:45:6",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 746,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3415:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$881",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$881",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 745,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3407:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 744,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3407:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 747,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3407:13:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 742,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1379,
																						"src": "3377:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1379_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 743,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3396:10:6",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1113,
																					"src": "3377:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3377:44:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 750,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "3425:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3441:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3425:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3376:66:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 754,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3375:68:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3335:108:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3457:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:201:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "3314:201:6"
											},
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 759,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "3525:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3540:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3525:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "3525:16:6"
											},
											{
												"condition": {
													"id": 763,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 731,
													"src": "3555:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "3551:65:6",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "3571:45:6",
													"statements": [
														{
															"expression": {
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 764,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "3585:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3601:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3585:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 767,
															"nodeType": "ExpressionStatement",
															"src": "3585:20:6"
														}
													]
												}
											},
											{
												"id": 770,
												"nodeType": "PlaceholderStatement",
												"src": "3625:1:6"
											},
											{
												"condition": {
													"id": 771,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 731,
													"src": "3640:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "3636:99:6",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "3656:79:6",
													"statements": [
														{
															"expression": {
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 772,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "3670:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3686:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3670:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 775,
															"nodeType": "ExpressionStatement",
															"src": "3670:21:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3722:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 776,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "3710:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3710:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 779,
															"nodeType": "EmitStatement",
															"src": "3705:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "2831:399:6",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 783,
									"name": "initializer",
									"nameLocation": "3244:11:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:6"
									},
									"src": "3235:506:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "4852:255:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4870:14:6",
																"subExpression": {
																	"id": 789,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "4871:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 791,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "4888:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 792,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "4903:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4888:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4870:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4862:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "4862:99:6"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 798,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "4971:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 799,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "4986:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4971:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "4971:22:6"
											},
											{
												"expression": {
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 802,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "5003:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5019:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5003:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "5003:20:6"
											},
											{
												"id": 806,
												"nodeType": "PlaceholderStatement",
												"src": "5033:1:6"
											},
											{
												"expression": {
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "5044:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5060:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5044:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "5044:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 812,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "5092:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 811,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "5080:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5080:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "EmitStatement",
												"src": "5075:25:6"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "3747:1062:6",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 816,
									"name": "reinitializer",
									"nameLocation": "4823:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4843:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "4837:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 785,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:15:6"
									},
									"src": "4814:293:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "5345:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 820,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5363:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5378:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5355:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "5355:69:6"
											},
											{
												"id": 824,
												"nodeType": "PlaceholderStatement",
												"src": "5434:1:6"
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "5113:199:6",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 826,
									"name": "onlyInitializing",
									"nameLocation": "5326:16:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5342:2:6"
									},
									"src": "5317:125:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "5977:230:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5995:14:6",
															"subExpression": {
																"id": 831,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "5996:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6011:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5987:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "5987:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "6067:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6087:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6087:5:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 837,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6082:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6082:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6094:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6082:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6067:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "6063:138:6",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "6099:102:6",
													"statements": [
														{
															"expression": {
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 843,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "6113:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6133:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 845,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6133:5:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 844,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6128:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6128:11:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6140:3:6",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6128:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6113:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 850,
															"nodeType": "ExpressionStatement",
															"src": "6113:30:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 854,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6179:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 853,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6179:5:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 852,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6174:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6174:11:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6186:3:6",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6174:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 851,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "6162:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6162:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "EmitStatement",
															"src": "6157:33:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "5448:475:6",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5937:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5957:2:6"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:6"
									},
									"scope": 881,
									"src": "5928:279:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "6381:36:6",
										"statements": [
											{
												"expression": {
													"id": 868,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 719,
													"src": "6398:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 867,
												"id": 869,
												"nodeType": "Return",
												"src": "6391:19:6"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "6213:99:6",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6326:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6348:2:6"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "6374:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 865,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6374:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6373:7:6"
									},
									"scope": 881,
									"src": "6317:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "6589:37:6",
										"statements": [
											{
												"expression": {
													"id": 877,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "6606:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 876,
												"id": 878,
												"nodeType": "Return",
												"src": "6599:20:6"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "6423:105:6",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6542:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6557:2:6"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "6583:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6583:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:6:6"
									},
									"scope": 881,
									"src": "6533:93:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 882,
							"src": "2383:4245:6",
							"usedErrors": [],
							"usedEvents": [
								727
							]
						}
					],
					"src": "113:6516:6"
				},
				"id": 6
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1379
						],
						"ERC1967UpgradeUpgradeable": [
							702
						],
						"IBeaconUpgradeable": [
							712
						],
						"IERC1822ProxiableUpgradeable": [
							347
						],
						"IERC1967Upgradeable": [
							337
						],
						"Initializable": [
							881
						],
						"StorageSlotUpgradeable": [
							1481
						],
						"UUPSUpgradeable": [
							1017
						]
					},
					"id": 1018,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:7"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1018,
							"sourceUnit": 348,
							"src": "140:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1018,
							"sourceUnit": 703,
							"src": "197:50:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1018,
							"sourceUnit": 882,
							"src": "248:29:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 888,
										"name": "Initializable",
										"nameLocations": [
											"965:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 881,
										"src": "965:13:7"
									},
									"id": 889,
									"nodeType": "InheritanceSpecifier",
									"src": "965:13:7"
								},
								{
									"baseName": {
										"id": 890,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"980:28:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 347,
										"src": "980:28:7"
									},
									"id": 891,
									"nodeType": "InheritanceSpecifier",
									"src": "980:28:7"
								},
								{
									"baseName": {
										"id": 892,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1010:25:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 702,
										"src": "1010:25:7"
									},
									"id": 893,
									"nodeType": "InheritanceSpecifier",
									"src": "1010:25:7"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "279:648:7",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1017,
							"linearizedBaseContracts": [
								1017,
								702,
								337,
								347,
								881
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "946:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "1102:7:7",
										"statements": []
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 896,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 895,
												"name": "onlyInitializing",
												"nameLocations": [
													"1085:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 826,
												"src": "1085:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1085:16:7"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "1051:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:2:7"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:7"
									},
									"scope": 1017,
									"src": "1042:67:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "1185:7:7",
										"statements": []
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 902,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 901,
												"name": "onlyInitializing",
												"nameLocations": [
													"1168:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 826,
												"src": "1168:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1168:16:7"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "1124:32:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:7"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:0:7"
									},
									"scope": 1017,
									"src": "1115:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "1197:87:7",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 912,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1315:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1017,
									"src": "1289:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 907,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1289:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 910,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1332:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1017",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1017",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 909,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1324:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 908,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1324:7:7",
												"typeDescriptions": {}
											}
										},
										"id": 911,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1324:13:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "1863:205:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 918,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1889:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1017",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1017",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 916,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1881:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1881:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 920,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "1898:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1881:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1873:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:80:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "1873:80:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 926,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "1971:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1971:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 928,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "1995:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1971:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:46:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "1963:87:7"
											},
											{
												"id": 933,
												"nodeType": "PlaceholderStatement",
												"src": "2060:1:7"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "1344:493:7",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 935,
									"name": "onlyProxy",
									"nameLocation": "1851:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:7"
									},
									"src": "1842:226:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "2298:120:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 941,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2324:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1017",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1017",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2316:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 939,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2316:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2316:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 943,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "2333:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2316:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:58:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:92:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "2308:92:7"
											},
											{
												"id": 948,
												"nodeType": "PlaceholderStatement",
												"src": "2410:1:7"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "2074:195:7",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 950,
									"name": "notDelegated",
									"nameLocation": "2283:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:2:7"
									},
									"src": "2274:144:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "3093:44:7",
										"statements": [
											{
												"expression": {
													"id": 959,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 379,
													"src": "3110:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 958,
												"id": 960,
												"nodeType": "Return",
												"src": "3103:27:7"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "2424:577:7",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 955,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 954,
												"name": "notDelegated",
												"nameLocations": [
													"3062:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "3062:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3062:12:7"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3015:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 953,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3053:8:7"
									},
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:7"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3084:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 956,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:9:7"
									},
									"scope": 1017,
									"src": "3006:131:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "3390:124:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 971,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3418:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 970,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3400:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "3400:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3468:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3497:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3487:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 976,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3491:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3487:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3501:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 974,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "3446:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "3446:61:7"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "3143:169:7",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."
									},
									"functionSelector": "3659cfe6",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 968,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 967,
												"name": "onlyProxy",
												"nameLocations": [
													"3380:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 935,
												"src": "3380:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3380:9:7"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3326:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3344:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "3336:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3336:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:27:7"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:7"
									},
									"scope": 1017,
									"src": "3317:197:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "3870:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "3898:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 994,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3880:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "3880:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 999,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "3948:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "3967:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3973:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 998,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "3926:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:7"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "3520:238:7",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."
									},
									"functionSelector": "4f1ef286",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 992,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 991,
												"name": "onlyProxy",
												"nameLocations": [
													"3860:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 935,
												"src": "3860:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3860:9:7"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3772:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3797:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "3789:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3829:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "3816:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 988,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3816:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3788:46:7"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3870:0:7"
									},
									"scope": 1017,
									"src": "3763:222:7",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "3991:397:7",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 1011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4402:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4428:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "4420:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:27:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4463:0:7"
									},
									"scope": 1017,
									"src": "4393:71:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "4470:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1016,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4749:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1017,
									"src": "4729:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1013,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4729:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1015,
										"length": {
											"hexValue": "3530",
											"id": 1014,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4737:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4729:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1018,
							"src": "928:3829:7",
							"usedErrors": [],
							"usedEvents": [
								324,
								331,
								336,
								727
							]
						}
					],
					"src": "115:4643:7"
				},
				"id": 7
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1095
						]
					},
					"id": 1096,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1019,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1020,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:8",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1095,
							"linearizedBaseContracts": [
								1095
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1029,
									"name": "Transfer",
									"nameLocation": "405:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "414:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "436:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "456:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:8"
									},
									"src": "399:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1038,
									"name": "Approval",
									"nameLocation": "636:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "645:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "668:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:8"
									},
									"src": "630:78:8"
								},
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:8",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:8"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "831:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:8"
									},
									"scope": 1095,
									"src": "785:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:8",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "942:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:8"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "982:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:8"
									},
									"scope": 1095,
									"src": "923:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:8",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1222:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1234:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:8"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1268:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:8"
									},
									"scope": 1095,
									"src": "1204:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1568:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1583:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:8"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1623:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:8"
									},
									"scope": 1095,
									"src": "1549:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2302:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2319:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:8"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2353:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:8"
									},
									"scope": 1095,
									"src": "2285:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:8",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2688:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2710:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2730:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:8"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "2769:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:8"
									},
									"scope": 1095,
									"src": "2657:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1096,
							"src": "202:2575:8",
							"usedErrors": [],
							"usedEvents": [
								1029,
								1038
							]
						}
					],
					"src": "106:2672:8"
				},
				"id": 8
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1379
						]
					},
					"id": 1380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1097,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1379,
							"linearizedBaseContracts": [
								1379
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "1252:254:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1106,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "1476:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1484:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1489:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1105,
												"id": 1111,
												"nodeType": "Return",
												"src": "1469:30:9"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:9",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1206:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:9"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1246:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:9"
									},
									"scope": 1379,
									"src": "1186:320:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2494:241:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1379",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1379",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2526:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1127,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "2537:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:9"
											},
											{
												"assignments": [
													1133,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "2589:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1132,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1140,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1134,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "2607:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2617:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1136,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "2629:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2658:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:9"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2442:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2469:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:9"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:9"
									},
									"scope": 1379,
									"src": "2423:312:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "3566:96:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1158,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "3605:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "3613:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3622:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1157,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1205,
															1249
														],
														"referencedDeclaration": 1249,
														"src": "3583:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1156,
												"id": 1163,
												"nodeType": "Return",
												"src": "3576:79:9"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3499:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3515:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:9"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3552:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:9"
									},
									"scope": 1379,
									"src": "3477:185:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "4031:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1178,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "4070:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "4078:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4084:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1181,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "4087:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1177,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1205,
															1249
														],
														"referencedDeclaration": 1249,
														"src": "4048:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1176,
												"id": 1183,
												"nodeType": "Return",
												"src": "4041:59:9"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "3668:211:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3893:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3923:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3915:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3952:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3939:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3939:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3980:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "3966:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3966:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:93:9"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "4017:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4017:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:14:9"
									},
									"scope": 1379,
									"src": "3884:223:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "4612:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "4651:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "4659:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1200,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "4665:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4672:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1197,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1205,
															1249
														],
														"referencedDeclaration": 1249,
														"src": "4629:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4629:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1196,
												"id": 1203,
												"nodeType": "Return",
												"src": "4622:94:9"
											}
										]
									},
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "4113:351:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4478:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4517:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4509:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4509:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4546:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4533:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1189,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4533:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4568:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4560:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4560:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:80:9"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "4598:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4598:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:14:9"
									},
									"scope": 1379,
									"src": "4469:254:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "5150:267:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1222,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5176:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1379",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1379",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5168:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1220,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5168:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5168:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5182:7:9",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5168:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1225,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "5193:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5200:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5160:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "5160:81:9"
											},
											{
												"assignments": [
													1231,
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5257:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "5252:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1230,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5252:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5279:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "5266:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1232,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5266:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1240,
												"initialValue": {
													"arguments": [
														{
															"id": 1238,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "5319:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1234,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "5293:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5300:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5293:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1236,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "5312:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5293:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5293:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5251:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "5368:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1243,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "5376:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1244,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "5385:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1245,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "5397:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1241,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "5341:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1218,
												"id": 1247,
												"nodeType": "Return",
												"src": "5334:76:9"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "4729:237:9",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4980:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5019:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5011:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5048:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5035:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5035:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5070:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5062:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5099:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5085:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5085:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:116:9"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5136:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5136:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:14:9"
									},
									"scope": 1379,
									"src": "4971:446:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "5694:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "5730:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5738:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5744:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1259,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1266,
															1295
														],
														"referencedDeclaration": 1295,
														"src": "5711:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5711:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1264,
												"nodeType": "Return",
												"src": "5704:80:9"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "5423:166:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5603:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5630:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "5622:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5651:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "5638:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5638:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5621:35:9"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "5680:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5680:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:14:9"
									},
									"scope": 1379,
									"src": "5594:197:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "6133:168:9",
										"statements": [
											{
												"assignments": [
													1279,
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6149:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "6144:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1278,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6144:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6171:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "6158:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1280,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6158:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1286,
												"initialValue": {
													"arguments": [
														{
															"id": 1284,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "6203:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1282,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "6185:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6192:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6185:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6185:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1288,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "6252:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1289,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "6260:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1290,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "6269:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1291,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "6281:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1287,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "6225:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6225:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1293,
												"nodeType": "Return",
												"src": "6218:76:9"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "5797:173:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5984:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6020:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6012:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6049:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6036:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6036:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6077:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6063:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6063:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6002:93:9"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6119:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6119:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6118:14:9"
									},
									"scope": 1379,
									"src": "5975:326:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "6783:434:9",
										"statements": [
											{
												"condition": {
													"id": 1309,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1300,
													"src": "6797:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "7153:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1327,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "7175:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1328,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "7187:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1326,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "7167:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7167:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "7167:33:9"
														}
													]
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "6793:418:9",
												"trueBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "6806:341:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1310,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "6824:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6835:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6824:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6845:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6824:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1322,
															"nodeType": "IfStatement",
															"src": "6820:286:9",
															"trueBody": {
																"id": 1321,
																"nodeType": "Block",
																"src": "6848:258:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1316,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "7050:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1315,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1113,
																						"src": "7039:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7039:18:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1318,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7059:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1314,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7031:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7031:60:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1320,
																		"nodeType": "ExpressionStatement",
																		"src": "7031:60:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1323,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "7126:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1308,
															"id": 1324,
															"nodeType": "Return",
															"src": "7119:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "6307:277:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "6598:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6642:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6634:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6663:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6658:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6658:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6693:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6680:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6680:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6727:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6713:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6713:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6624:121:9"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "6769:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6769:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:14:9"
									},
									"scope": 1379,
									"src": "6589:628:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "7598:135:9",
										"statements": [
											{
												"condition": {
													"id": 1346,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1337,
													"src": "7612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "7669:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1351,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1339,
																		"src": "7691:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1352,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "7703:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1350,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "7683:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1354,
															"nodeType": "ExpressionStatement",
															"src": "7683:33:9"
														}
													]
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "7608:119:9",
												"trueBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "7621:42:9",
													"statements": [
														{
															"expression": {
																"id": 1347,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "7642:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1345,
															"id": 1348,
															"nodeType": "Return",
															"src": "7635:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "7223:210:9",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7447:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7478:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7473:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7473:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7508:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7495:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7495:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7542:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7528:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1340,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7528:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:97:9"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "7584:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7584:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:14:9"
									},
									"scope": 1379,
									"src": "7438:295:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "7822:457:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1365,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "7898:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7909:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7898:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7918:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7898:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1375,
													"nodeType": "Block",
													"src": "8228:45:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1372,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "8249:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1371,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8242:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8242:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1374,
															"nodeType": "ExpressionStatement",
															"src": "8242:20:9"
														}
													]
												},
												"id": 1376,
												"nodeType": "IfStatement",
												"src": "7894:379:9",
												"trueBody": {
													"id": 1370,
													"nodeType": "Block",
													"src": "7921:301:9",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8079:133:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8097:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "8126:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8120:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8120:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8101:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8165:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "8169:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8161:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8161:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "8182:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8154:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8154:44:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8154:44:9"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1360,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8126:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1360,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8169:10:9",
																	"valueSize": 1
																}
															],
															"id": 1369,
															"nodeType": "InlineAssembly",
															"src": "8070:142:9"
														}
													]
												}
											}
										]
									},
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "7748:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7769:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "7756:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7756:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7795:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "7781:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7781:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:53:9"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7822:0:9"
									},
									"scope": 1379,
									"src": "7739:540:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1380,
							"src": "194:8087:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:8181:9"
				},
				"id": 9
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1379
						],
						"ContextUpgradeable": [
							1421
						],
						"Initializable": [
							881
						]
					},
					"id": 1422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:10"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1422,
							"sourceUnit": 882,
							"src": "110:42:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1384,
										"name": "Initializable",
										"nameLocations": [
											"691:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 881,
										"src": "691:13:10"
									},
									"id": 1385,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:10"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1383,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1421,
							"linearizedBaseContracts": [
								1421,
								881
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "763:7:10",
										"statements": []
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1387,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 826,
												"src": "746:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:10"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:10"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:10"
									},
									"scope": 1421,
									"src": "711:59:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "838:7:10",
										"statements": []
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1393,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 826,
												"src": "821:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:10"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:10"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:10"
									},
									"scope": 1421,
									"src": "776:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "912:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1402,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1401,
												"id": 1404,
												"nodeType": "Return",
												"src": "922:17:10"
											}
										]
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:10"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "903:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:10"
									},
									"scope": 1421,
									"src": "850:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "1019:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1411,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1413,
												"nodeType": "Return",
												"src": "1029:15:10"
											}
										]
									},
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:10"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "1003:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:10"
									},
									"scope": 1421,
									"src": "952:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:10",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1420,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1421,
									"src": "1316:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1417,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1419,
										"length": {
											"hexValue": "3530",
											"id": 1418,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1422,
							"src": "651:693:10",
							"usedErrors": [],
							"usedEvents": [
								727
							]
						}
					],
					"src": "86:1259:10"
				},
				"id": 10
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							1481
						]
					},
					"id": 1482,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1424,
								"nodeType": "StructuredDocumentation",
								"src": "130:1148:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 1481,
							"linearizedBaseContracts": [
								1481
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1287:22:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 1427,
									"members": [
										{
											"constant": false,
											"id": 1426,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1353:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1427,
											"src": "1345:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1425,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1345:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1323:11:11",
									"nodeType": "StructDefinition",
									"scope": 1481,
									"src": "1316:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 1430,
									"members": [
										{
											"constant": false,
											"id": 1429,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1405:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "1400:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1428,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1400:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1378:11:11",
									"nodeType": "StructDefinition",
									"scope": 1481,
									"src": "1371:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 1433,
									"members": [
										{
											"constant": false,
											"id": 1432,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1460:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1433,
											"src": "1452:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1431,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1452:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1430:11:11",
									"nodeType": "StructDefinition",
									"scope": 1481,
									"src": "1423:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 1436,
									"members": [
										{
											"constant": false,
											"id": 1435,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1515:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1436,
											"src": "1507:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1434,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1507:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1485:11:11",
									"nodeType": "StructDefinition",
									"scope": 1481,
									"src": "1478:49:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "1709:106:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1771:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1785:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1795:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1785:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1443,
														"isOffset": false,
														"isSlot": true,
														"src": "1785:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1439,
														"isOffset": false,
														"isSlot": false,
														"src": "1795:4:11",
														"valueSize": 1
													}
												],
												"id": 1445,
												"nodeType": "InlineAssembly",
												"src": "1762:47:11"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "1533:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1634:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1657:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1649:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:14:11"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1706:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1686:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1427_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 1442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1441,
														"name": "AddressSlot",
														"nameLocations": [
															"1686:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1427,
														"src": "1686:11:11"
													},
													"referencedDeclaration": 1427,
													"src": "1686:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1427_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:23:11"
									},
									"scope": 1481,
									"src": "1625:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "1997:106:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2059:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2073:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2083:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2073:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1454,
														"isOffset": false,
														"isSlot": true,
														"src": "2073:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "2083:4:11",
														"valueSize": 1
													}
												],
												"id": 1456,
												"nodeType": "InlineAssembly",
												"src": "2050:47:11"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "1821:87:11",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1922:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1945:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1937:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:14:11"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1994:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1974:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1430_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 1453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1452,
														"name": "BooleanSlot",
														"nameLocations": [
															"1974:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1430,
														"src": "1974:11:11"
													},
													"referencedDeclaration": 1430,
													"src": "1974:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1430_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:23:11"
									},
									"scope": 1481,
									"src": "1913:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "2285:106:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2347:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2371:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": true,
														"src": "2361:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1461,
														"isOffset": false,
														"isSlot": false,
														"src": "2371:4:11",
														"valueSize": 1
													}
												],
												"id": 1467,
												"nodeType": "InlineAssembly",
												"src": "2338:47:11"
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "2109:87:11",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2210:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2233:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2225:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1460,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:14:11"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2282:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2262:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1433_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 1464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1463,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2262:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1433,
														"src": "2262:11:11"
													},
													"referencedDeclaration": 1433,
													"src": "2262:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1433_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:23:11"
									},
									"scope": 1481,
									"src": "2201:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "2573:106:11",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2635:38:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2649:14:11",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2659:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2649:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1476,
														"isOffset": false,
														"isSlot": true,
														"src": "2649:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1472,
														"isOffset": false,
														"isSlot": false,
														"src": "2659:4:11",
														"valueSize": 1
													}
												],
												"id": 1478,
												"nodeType": "InlineAssembly",
												"src": "2626:47:11"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "2397:87:11",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2498:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2521:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "2513:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2512:14:11"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2570:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "2550:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1436_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 1475,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1474,
														"name": "Uint256Slot",
														"nameLocations": [
															"2550:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1436,
														"src": "2550:11:11"
													},
													"referencedDeclaration": 1436,
													"src": "2550:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1436_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:23:11"
									},
									"scope": 1481,
									"src": "2489:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1482,
							"src": "1279:1402:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "105:2577:11"
				},
				"id": 11
			}
		}
	}
}